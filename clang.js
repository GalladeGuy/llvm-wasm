
var Module = (() => {
  var _scriptDir = import.meta.url;
  
  return (
async function(moduleArg = {}) {

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){if(Module["ENVIRONMENT_IS_PTHREAD"]||Module["$ww"])return;var loadPackage=function(metadata){var PACKAGE_PATH="";if(typeof window==="object"){PACKAGE_PATH=window["encodeURIComponent"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/")}else if(typeof process==="undefined"&&typeof location!=="undefined"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/")}var PACKAGE_NAME="bin/clang.data";var REMOTE_PACKAGE_BASE="clang.data";if(typeof Module["locateFilePackage"]==="function"&&!Module["locateFile"]){Module["locateFile"]=Module["locateFilePackage"];err("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)")}var REMOTE_PACKAGE_NAME=Module["locateFile"]?Module["locateFile"](REMOTE_PACKAGE_BASE,""):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata["remote_package_size"];function fetchRemotePackage(packageName,packageSize,callback,errback){if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){require("fs").readFile(packageName,function(err,contents){if(err){errback(err)}else{callback(contents.buffer)}});return}var xhr=new XMLHttpRequest;xhr.open("GET",packageName,true);xhr.responseType="arraybuffer";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module["setStatus"])Module["setStatus"](`Downloading data... (${loaded}/${total})`)}else if(!Module.dataFileDownloads){if(Module["setStatus"])Module["setStatus"]("Downloading data...")}};xhr.onerror=function(event){throw new Error("NetworkError for: "+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+" : "+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error("package error:",error)}var fetchedCallback=null;var fetched=Module["getPreloadedPackage"]?Module["getPreloadedPackage"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","include",true,true);Module["FS_createPath"]("/include","arpa",true,true);Module["FS_createPath"]("/include","bits",true,true);Module["FS_createPath"]("/include","c++",true,true);Module["FS_createPath"]("/include/c++","v1",true,true);Module["FS_createPath"]("/include/c++/v1","__algorithm",true,true);Module["FS_createPath"]("/include/c++/v1/__algorithm","pstl_backends",true,true);Module["FS_createPath"]("/include/c++/v1/__algorithm/pstl_backends","cpu_backends",true,true);Module["FS_createPath"]("/include/c++/v1","__atomic",true,true);Module["FS_createPath"]("/include/c++/v1","__bit",true,true);Module["FS_createPath"]("/include/c++/v1","__charconv",true,true);Module["FS_createPath"]("/include/c++/v1","__chrono",true,true);Module["FS_createPath"]("/include/c++/v1","__compare",true,true);Module["FS_createPath"]("/include/c++/v1","__concepts",true,true);Module["FS_createPath"]("/include/c++/v1","__condition_variable",true,true);Module["FS_createPath"]("/include/c++/v1","__coroutine",true,true);Module["FS_createPath"]("/include/c++/v1","__debug_utils",true,true);Module["FS_createPath"]("/include/c++/v1","__exception",true,true);Module["FS_createPath"]("/include/c++/v1","__expected",true,true);Module["FS_createPath"]("/include/c++/v1","__filesystem",true,true);Module["FS_createPath"]("/include/c++/v1","__format",true,true);Module["FS_createPath"]("/include/c++/v1","__functional",true,true);Module["FS_createPath"]("/include/c++/v1","__fwd",true,true);Module["FS_createPath"]("/include/c++/v1","__ios",true,true);Module["FS_createPath"]("/include/c++/v1","__iterator",true,true);Module["FS_createPath"]("/include/c++/v1","__locale_dir",true,true);Module["FS_createPath"]("/include/c++/v1/__locale_dir","locale_base_api",true,true);Module["FS_createPath"]("/include/c++/v1","__mdspan",true,true);Module["FS_createPath"]("/include/c++/v1","__memory",true,true);Module["FS_createPath"]("/include/c++/v1","__memory_resource",true,true);Module["FS_createPath"]("/include/c++/v1","__mutex",true,true);Module["FS_createPath"]("/include/c++/v1","__numeric",true,true);Module["FS_createPath"]("/include/c++/v1","__pstl",true,true);Module["FS_createPath"]("/include/c++/v1/__pstl","internal",true,true);Module["FS_createPath"]("/include/c++/v1/__pstl/internal","omp",true,true);Module["FS_createPath"]("/include/c++/v1","__random",true,true);Module["FS_createPath"]("/include/c++/v1","__ranges",true,true);Module["FS_createPath"]("/include/c++/v1","__stop_token",true,true);Module["FS_createPath"]("/include/c++/v1","__string",true,true);Module["FS_createPath"]("/include/c++/v1","__support",true,true);Module["FS_createPath"]("/include/c++/v1/__support","android",true,true);Module["FS_createPath"]("/include/c++/v1/__support","fuchsia",true,true);Module["FS_createPath"]("/include/c++/v1/__support","ibm",true,true);Module["FS_createPath"]("/include/c++/v1/__support","musl",true,true);Module["FS_createPath"]("/include/c++/v1/__support","newlib",true,true);Module["FS_createPath"]("/include/c++/v1/__support","openbsd",true,true);Module["FS_createPath"]("/include/c++/v1/__support","win32",true,true);Module["FS_createPath"]("/include/c++/v1/__support","xlocale",true,true);Module["FS_createPath"]("/include/c++/v1","__system_error",true,true);Module["FS_createPath"]("/include/c++/v1","__thread",true,true);Module["FS_createPath"]("/include/c++/v1","__tuple",true,true);Module["FS_createPath"]("/include/c++/v1","__type_traits",true,true);Module["FS_createPath"]("/include/c++/v1","__utility",true,true);Module["FS_createPath"]("/include/c++/v1","__variant",true,true);Module["FS_createPath"]("/include/c++/v1","experimental",true,true);Module["FS_createPath"]("/include/c++/v1","ext",true,true);Module["FS_createPath"]("/include","netinet",true,true);Module["FS_createPath"]("/include","netpacket",true,true);Module["FS_createPath"]("/include","sys",true,true);Module["FS_createPath"]("/include","wasi",true,true);Module["FS_createPath"]("/","lib",true,true);Module["FS_createPath"]("/lib","clang",true,true);Module["FS_createPath"]("/lib/clang","17.0.6",true,true);Module["FS_createPath"]("/lib/clang/17.0.6","lib",true,true);Module["FS_createPath"]("/lib/clang/17.0.6/lib","wasi",true,true);Module["FS_createPath"]("/lib/clang","17",true,true);Module["FS_createPath"]("/lib/clang/17","include",true,true);Module["FS_createPath"]("/lib/clang/17/include","cuda_wrappers",true,true);Module["FS_createPath"]("/lib/clang/17/include/cuda_wrappers","bits",true,true);Module["FS_createPath"]("/lib/clang/17/include","hlsl",true,true);Module["FS_createPath"]("/lib/clang/17/include","llvm_libc_wrappers",true,true);Module["FS_createPath"]("/lib/clang/17/include","openmp_wrappers",true,true);Module["FS_createPath"]("/lib/clang/17/include","ppc_wrappers",true,true);Module["FS_createPath"]("/lib","wasm32-wasi-threads",true,true);Module["FS_createPath"]("/lib","wasm32-wasi",true,true);Module["FS_createPath"]("/","share",true,true);Module["FS_createPath"]("/share","wasm32-wasi-threads",true,true);Module["FS_createPath"]("/share","wasm32-wasi",true,true);function DataRequest(start,end,audio){this.start=start;this.end=end;this.audio=audio}DataRequest.prototype={requests:{},open:function(mode,name){this.name=name;this.requests[name]=this;Module["addRunDependency"](`fp ${this.name}`)},send:function(){},onload:function(){var byteArray=this.byteArray.subarray(this.start,this.end);this.finish(byteArray)},finish:function(byteArray){var that=this;Module["FS_createDataFile"](this.name,null,byteArray,true,true,true);Module["removeRunDependency"](`fp ${that.name}`);this.requests[this.name]=null}};var files=metadata["files"];for(var i=0;i<files.length;++i){new DataRequest(files[i]["start"],files[i]["end"],files[i]["audio"]||0).open("GET",files[i]["filename"])}function processPackageData(arrayBuffer){assert(arrayBuffer,"Loading data file failed.");assert(arrayBuffer.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var byteArray=new Uint8Array(arrayBuffer);DataRequest.prototype.byteArray=byteArray;var files=metadata["files"];for(var i=0;i<files.length;++i){DataRequest.prototype.requests[files[i].filename].onload()}Module["removeRunDependency"]("datafile_bin/clang.data")}Module["addRunDependency"]("datafile_bin/clang.data");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[{"filename":"/include/__errno.h","start":0,"end":188},{"filename":"/include/__errno_values.h","start":188,"end":3163},{"filename":"/include/__fd_set.h","start":3163,"end":4805},{"filename":"/include/__function___isatty.h","start":4805,"end":4987},{"filename":"/include/__functions_malloc.h","start":4987,"end":5677},{"filename":"/include/__functions_memcpy.h","start":5677,"end":6260},{"filename":"/include/__header_dirent.h","start":6260,"end":7371},{"filename":"/include/__header_fcntl.h","start":7371,"end":9008},{"filename":"/include/__header_inttypes.h","start":9008,"end":15216},{"filename":"/include/__header_netinet_in.h","start":15216,"end":15892},{"filename":"/include/__header_poll.h","start":15892,"end":16312},{"filename":"/include/__header_stdlib.h","start":16312,"end":16708},{"filename":"/include/__header_string.h","start":16708,"end":17317},{"filename":"/include/__header_sys_ioctl.h","start":17317,"end":17539},{"filename":"/include/__header_sys_resource.h","start":17539,"end":17828},{"filename":"/include/__header_sys_socket.h","start":17828,"end":18735},{"filename":"/include/__header_sys_stat.h","start":18735,"end":19017},{"filename":"/include/__header_time.h","start":19017,"end":19834},{"filename":"/include/__header_unistd.h","start":19834,"end":20350},{"filename":"/include/__macro_FD_SETSIZE.h","start":20350,"end":20463},{"filename":"/include/__macro_PAGESIZE.h","start":20463,"end":21007},{"filename":"/include/__mode_t.h","start":21007,"end":22078},{"filename":"/include/__seek.h","start":22078,"end":22271},{"filename":"/include/__struct_dirent.h","start":22271,"end":22494},{"filename":"/include/__struct_in6_addr.h","start":22494,"end":22651},{"filename":"/include/__struct_in_addr.h","start":22651,"end":22812},{"filename":"/include/__struct_iovec.h","start":22812,"end":22994},{"filename":"/include/__struct_msghdr.h","start":22994,"end":23296},{"filename":"/include/__struct_pollfd.h","start":23296,"end":23447},{"filename":"/include/__struct_rusage.h","start":23447,"end":23674},{"filename":"/include/__struct_sockaddr.h","start":23674,"end":23914},{"filename":"/include/__struct_sockaddr_in.h","start":23914,"end":24259},{"filename":"/include/__struct_sockaddr_in6.h","start":24259,"end":24668},{"filename":"/include/__struct_sockaddr_storage.h","start":24668,"end":24935},{"filename":"/include/__struct_sockaddr_un.h","start":24935,"end":25164},{"filename":"/include/__struct_stat.h","start":25164,"end":25908},{"filename":"/include/__struct_timespec.h","start":25908,"end":26113},{"filename":"/include/__struct_timeval.h","start":26113,"end":26357},{"filename":"/include/__struct_tm.h","start":26357,"end":26665},{"filename":"/include/__struct_tms.h","start":26665,"end":26884},{"filename":"/include/__typedef_DIR.h","start":26884,"end":26988},{"filename":"/include/__typedef_blkcnt_t.h","start":26988,"end":27186},{"filename":"/include/__typedef_blksize_t.h","start":27186,"end":27301},{"filename":"/include/__typedef_clock_t.h","start":27301,"end":27482},{"filename":"/include/__typedef_clockid_t.h","start":27482,"end":27616},{"filename":"/include/__typedef_dev_t.h","start":27616,"end":27803},{"filename":"/include/__typedef_fd_set.h","start":27803,"end":28037},{"filename":"/include/__typedef_gid_t.h","start":28037,"end":28144},{"filename":"/include/__typedef_in_addr_t.h","start":28144,"end":28263},{"filename":"/include/__typedef_in_port_t.h","start":28263,"end":28388},{"filename":"/include/__typedef_ino_t.h","start":28388,"end":28574},{"filename":"/include/__typedef_mode_t.h","start":28574,"end":28684},{"filename":"/include/__typedef_nfds_t.h","start":28684,"end":28799},{"filename":"/include/__typedef_nlink_t.h","start":28799,"end":28999},{"filename":"/include/__typedef_off_t.h","start":28999,"end":29188},{"filename":"/include/__typedef_sa_family_t.h","start":29188,"end":29319},{"filename":"/include/__typedef_sigset_t.h","start":29319,"end":29517},{"filename":"/include/__typedef_socklen_t.h","start":29517,"end":29636},{"filename":"/include/__typedef_ssize_t.h","start":29636,"end":29798},{"filename":"/include/__typedef_suseconds_t.h","start":29798,"end":30045},{"filename":"/include/__typedef_time_t.h","start":30045,"end":30224},{"filename":"/include/__typedef_uid_t.h","start":30224,"end":30331},{"filename":"/include/alloca.h","start":30331,"end":30550},{"filename":"/include/ar.h","start":30550,"end":30861},{"filename":"/include/arpa/ftp.h","start":30861,"end":31682},{"filename":"/include/arpa/inet.h","start":31682,"end":32535},{"filename":"/include/arpa/nameser.h","start":32535,"end":43282},{"filename":"/include/arpa/nameser_compat.h","start":43282,"end":43309},{"filename":"/include/arpa/telnet.h","start":43309,"end":49061},{"filename":"/include/arpa/tftp.h","start":49061,"end":49605},{"filename":"/include/assert.h","start":49605,"end":50033},{"filename":"/include/bits/alltypes.h","start":50033,"end":62774},{"filename":"/include/bits/dirent.h","start":62774,"end":62803},{"filename":"/include/bits/fcntl.h","start":62803,"end":62854},{"filename":"/include/bits/fenv.h","start":62854,"end":63032},{"filename":"/include/bits/float.h","start":63032,"end":63504},{"filename":"/include/bits/hwcap.h","start":63504,"end":63504},{"filename":"/include/bits/io.h","start":63504,"end":63504},{"filename":"/include/bits/ioctl.h","start":63504,"end":63555},{"filename":"/include/bits/ioctl_fix.h","start":63555,"end":63555},{"filename":"/include/bits/ipcstat.h","start":63555,"end":63574},{"filename":"/include/bits/limits.h","start":63574,"end":63604},{"filename":"/include/bits/mman.h","start":63604,"end":63604},{"filename":"/include/bits/poll.h","start":63604,"end":63604},{"filename":"/include/bits/posix.h","start":63604,"end":63674},{"filename":"/include/bits/reg.h","start":63674,"end":63714},{"filename":"/include/bits/resource.h","start":63714,"end":63714},{"filename":"/include/bits/signal.h","start":63714,"end":64484},{"filename":"/include/bits/socket.h","start":64484,"end":64484},{"filename":"/include/bits/stat.h","start":64484,"end":64511},{"filename":"/include/bits/stdint.h","start":64511,"end":65051},{"filename":"/include/byteswap.h","start":65051,"end":65552},{"filename":"/include/c++/v1/__algorithm/adjacent_find.h","start":65552,"end":67462},{"filename":"/include/c++/v1/__algorithm/all_of.h","start":67462,"end":68439},{"filename":"/include/c++/v1/__algorithm/any_of.h","start":68439,"end":69419},{"filename":"/include/c++/v1/__algorithm/binary_search.h","start":69419,"end":70962},{"filename":"/include/c++/v1/__algorithm/clamp.h","start":70962,"end":72251},{"filename":"/include/c++/v1/__algorithm/comp.h","start":72251,"end":73706},{"filename":"/include/c++/v1/__algorithm/comp_ref_type.h","start":73706,"end":76030},{"filename":"/include/c++/v1/__algorithm/copy.h","start":76030,"end":81019},{"filename":"/include/c++/v1/__algorithm/copy_backward.h","start":81019,"end":87129},{"filename":"/include/c++/v1/__algorithm/copy_if.h","start":87129,"end":88225},{"filename":"/include/c++/v1/__algorithm/copy_move_common.h","start":88225,"end":93539},{"filename":"/include/c++/v1/__algorithm/copy_n.h","start":93539,"end":95661},{"filename":"/include/c++/v1/__algorithm/count.h","start":95661,"end":96795},{"filename":"/include/c++/v1/__algorithm/count_if.h","start":96795,"end":97944},{"filename":"/include/c++/v1/__algorithm/equal.h","start":97944,"end":104541},{"filename":"/include/c++/v1/__algorithm/equal_range.h","start":104541,"end":107935},{"filename":"/include/c++/v1/__algorithm/fill.h","start":107935,"end":109651},{"filename":"/include/c++/v1/__algorithm/fill_n.h","start":109651,"end":111084},{"filename":"/include/c++/v1/__algorithm/find.h","start":111084,"end":113849},{"filename":"/include/c++/v1/__algorithm/find_end.h","start":113849,"end":121610},{"filename":"/include/c++/v1/__algorithm/find_first_of.h","start":121610,"end":123952},{"filename":"/include/c++/v1/__algorithm/find_if.h","start":123952,"end":124942},{"filename":"/include/c++/v1/__algorithm/find_if_not.h","start":124942,"end":125949},{"filename":"/include/c++/v1/__algorithm/for_each.h","start":125949,"end":127051},{"filename":"/include/c++/v1/__algorithm/for_each_n.h","start":127051,"end":128385},{"filename":"/include/c++/v1/__algorithm/for_each_segment.h","start":128385,"end":130418},{"filename":"/include/c++/v1/__algorithm/generate.h","start":130418,"end":131343},{"filename":"/include/c++/v1/__algorithm/generate_n.h","start":131343,"end":132466},{"filename":"/include/c++/v1/__algorithm/half_positive.h","start":132466,"end":133805},{"filename":"/include/c++/v1/__algorithm/in_found_result.h","start":133805,"end":135157},{"filename":"/include/c++/v1/__algorithm/in_fun_result.h","start":135157,"end":136663},{"filename":"/include/c++/v1/__algorithm/in_in_out_result.h","start":136663,"end":138459},{"filename":"/include/c++/v1/__algorithm/in_in_result.h","start":138459,"end":139990},{"filename":"/include/c++/v1/__algorithm/in_out_out_result.h","start":139990,"end":141803},{"filename":"/include/c++/v1/__algorithm/in_out_result.h","start":141803,"end":143411},{"filename":"/include/c++/v1/__algorithm/includes.h","start":143411,"end":146002},{"filename":"/include/c++/v1/__algorithm/inplace_merge.h","start":146002,"end":156234},{"filename":"/include/c++/v1/__algorithm/is_heap.h","start":156234,"end":157635},{"filename":"/include/c++/v1/__algorithm/is_heap_until.h","start":157635,"end":159888},{"filename":"/include/c++/v1/__algorithm/is_partitioned.h","start":159888,"end":161044},{"filename":"/include/c++/v1/__algorithm/is_permutation.h","start":161044,"end":170418},{"filename":"/include/c++/v1/__algorithm/is_sorted.h","start":170418,"end":171794},{"filename":"/include/c++/v1/__algorithm/is_sorted_until.h","start":171794,"end":173626},{"filename":"/include/c++/v1/__algorithm/iter_swap.h","start":173626,"end":174814},{"filename":"/include/c++/v1/__algorithm/iterator_operations.h","start":174814,"end":180828},{"filename":"/include/c++/v1/__algorithm/lexicographical_compare.h","start":180828,"end":183038},{"filename":"/include/c++/v1/__algorithm/lexicographical_compare_three_way.h","start":183038,"end":188204},{"filename":"/include/c++/v1/__algorithm/lower_bound.h","start":188204,"end":190690},{"filename":"/include/c++/v1/__algorithm/make_heap.h","start":190690,"end":192855},{"filename":"/include/c++/v1/__algorithm/make_projected.h","start":192855,"end":197002},{"filename":"/include/c++/v1/__algorithm/max.h","start":197002,"end":198907},{"filename":"/include/c++/v1/__algorithm/max_element.h","start":198907,"end":200805},{"filename":"/include/c++/v1/__algorithm/merge.h","start":200805,"end":203168},{"filename":"/include/c++/v1/__algorithm/min.h","start":203168,"end":205073},{"filename":"/include/c++/v1/__algorithm/min_element.h","start":205073,"end":207634},{"filename":"/include/c++/v1/__algorithm/min_max_result.h","start":207634,"end":209032},{"filename":"/include/c++/v1/__algorithm/minmax.h","start":209032,"end":211251},{"filename":"/include/c++/v1/__algorithm/minmax_element.h","start":211251,"end":214683},{"filename":"/include/c++/v1/__algorithm/mismatch.h","start":214683,"end":217287},{"filename":"/include/c++/v1/__algorithm/move.h","start":217287,"end":222658},{"filename":"/include/c++/v1/__algorithm/move_backward.h","start":222658,"end":228849},{"filename":"/include/c++/v1/__algorithm/next_permutation.h","start":228849,"end":231556},{"filename":"/include/c++/v1/__algorithm/none_of.h","start":231556,"end":232540},{"filename":"/include/c++/v1/__algorithm/nth_element.h","start":232540,"end":241941},{"filename":"/include/c++/v1/__algorithm/partial_sort.h","start":241941,"end":245511},{"filename":"/include/c++/v1/__algorithm/partial_sort_copy.h","start":245511,"end":249270},{"filename":"/include/c++/v1/__algorithm/partition.h","start":249270,"end":252758},{"filename":"/include/c++/v1/__algorithm/partition_copy.h","start":252758,"end":254213},{"filename":"/include/c++/v1/__algorithm/partition_point.h","start":254213,"end":255730},{"filename":"/include/c++/v1/__algorithm/pop_heap.h","start":255730,"end":258722},{"filename":"/include/c++/v1/__algorithm/prev_permutation.h","start":258722,"end":261429},{"filename":"/include/c++/v1/__algorithm/pstl_any_all_none_of.h","start":261429,"end":265456},{"filename":"/include/c++/v1/__algorithm/pstl_backend.h","start":265456,"end":274031},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backend.h","start":274031,"end":276492},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/any_of.h","start":276492,"end":280012},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/backend.h","start":280012,"end":281276},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/fill.h","start":281276,"end":283699},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/find_if.h","start":283699,"end":288575},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/for_each.h","start":288575,"end":290992},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/libdispatch.h","start":290992,"end":299994},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/merge.h","start":299994,"end":302851},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/serial.h","start":302851,"end":305305},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/stable_sort.h","start":305305,"end":307028},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/thread.h","start":307028,"end":309721},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/transform.h","start":309721,"end":315512},{"filename":"/include/c++/v1/__algorithm/pstl_backends/cpu_backends/transform_reduce.h","start":315512,"end":323138},{"filename":"/include/c++/v1/__algorithm/pstl_copy.h","start":323138,"end":325387},{"filename":"/include/c++/v1/__algorithm/pstl_count.h","start":325387,"end":328788},{"filename":"/include/c++/v1/__algorithm/pstl_fill.h","start":328788,"end":331952},{"filename":"/include/c++/v1/__algorithm/pstl_find.h","start":331952,"end":335709},{"filename":"/include/c++/v1/__algorithm/pstl_for_each.h","start":335709,"end":338730},{"filename":"/include/c++/v1/__algorithm/pstl_frontend_dispatch.h","start":338730,"end":340588},{"filename":"/include/c++/v1/__algorithm/pstl_generate.h","start":340588,"end":343617},{"filename":"/include/c++/v1/__algorithm/pstl_is_partitioned.h","start":343617,"end":345756},{"filename":"/include/c++/v1/__algorithm/pstl_merge.h","start":345756,"end":347724},{"filename":"/include/c++/v1/__algorithm/pstl_replace.h","start":347724,"end":353488},{"filename":"/include/c++/v1/__algorithm/pstl_sort.h","start":353488,"end":355887},{"filename":"/include/c++/v1/__algorithm/pstl_stable_sort.h","start":355887,"end":357568},{"filename":"/include/c++/v1/__algorithm/pstl_transform.h","start":357568,"end":360724},{"filename":"/include/c++/v1/__algorithm/push_heap.h","start":360724,"end":363807},{"filename":"/include/c++/v1/__algorithm/ranges_adjacent_find.h","start":363807,"end":366566},{"filename":"/include/c++/v1/__algorithm/ranges_all_of.h","start":366566,"end":368841},{"filename":"/include/c++/v1/__algorithm/ranges_any_of.h","start":368841,"end":371120},{"filename":"/include/c++/v1/__algorithm/ranges_binary_search.h","start":371120,"end":373781},{"filename":"/include/c++/v1/__algorithm/ranges_clamp.h","start":373781,"end":375787},{"filename":"/include/c++/v1/__algorithm/ranges_copy.h","start":375787,"end":378022},{"filename":"/include/c++/v1/__algorithm/ranges_copy_backward.h","start":378022,"end":380308},{"filename":"/include/c++/v1/__algorithm/ranges_copy_if.h","start":380308,"end":383188},{"filename":"/include/c++/v1/__algorithm/ranges_copy_n.h","start":383188,"end":385582},{"filename":"/include/c++/v1/__algorithm/ranges_count.h","start":385582,"end":387880},{"filename":"/include/c++/v1/__algorithm/ranges_count_if.h","start":387880,"end":390411},{"filename":"/include/c++/v1/__algorithm/ranges_equal.h","start":390411,"end":393982},{"filename":"/include/c++/v1/__algorithm/ranges_equal_range.h","start":393982,"end":396769},{"filename":"/include/c++/v1/__algorithm/ranges_fill.h","start":396769,"end":398574},{"filename":"/include/c++/v1/__algorithm/ranges_fill_n.h","start":398574,"end":399873},{"filename":"/include/c++/v1/__algorithm/ranges_find.h","start":399873,"end":402628},{"filename":"/include/c++/v1/__algorithm/ranges_find_end.h","start":402628,"end":405808},{"filename":"/include/c++/v1/__algorithm/ranges_find_first_of.h","start":405808,"end":409168},{"filename":"/include/c++/v1/__algorithm/ranges_find_if.h","start":409168,"end":411470},{"filename":"/include/c++/v1/__algorithm/ranges_find_if_not.h","start":411470,"end":413773},{"filename":"/include/c++/v1/__algorithm/ranges_for_each.h","start":413773,"end":416305},{"filename":"/include/c++/v1/__algorithm/ranges_for_each_n.h","start":416305,"end":418123},{"filename":"/include/c++/v1/__algorithm/ranges_generate.h","start":418123,"end":420349},{"filename":"/include/c++/v1/__algorithm/ranges_generate_n.h","start":420349,"end":422046},{"filename":"/include/c++/v1/__algorithm/ranges_includes.h","start":422046,"end":425103},{"filename":"/include/c++/v1/__algorithm/ranges_inplace_merge.h","start":425103,"end":427978},{"filename":"/include/c++/v1/__algorithm/ranges_is_heap.h","start":427978,"end":430715},{"filename":"/include/c++/v1/__algorithm/ranges_is_heap_until.h","start":430715,"end":433528},{"filename":"/include/c++/v1/__algorithm/ranges_is_partitioned.h","start":433528,"end":436121},{"filename":"/include/c++/v1/__algorithm/ranges_is_permutation.h","start":436121,"end":439895},{"filename":"/include/c++/v1/__algorithm/ranges_is_sorted.h","start":439895,"end":442128},{"filename":"/include/c++/v1/__algorithm/ranges_is_sorted_until.h","start":442128,"end":444833},{"filename":"/include/c++/v1/__algorithm/ranges_iterator_concept.h","start":444833,"end":446404},{"filename":"/include/c++/v1/__algorithm/ranges_lexicographical_compare.h","start":446404,"end":450040},{"filename":"/include/c++/v1/__algorithm/ranges_lower_bound.h","start":450040,"end":452566},{"filename":"/include/c++/v1/__algorithm/ranges_make_heap.h","start":452566,"end":455295},{"filename":"/include/c++/v1/__algorithm/ranges_max.h","start":455295,"end":459131},{"filename":"/include/c++/v1/__algorithm/ranges_max_element.h","start":459131,"end":461587},{"filename":"/include/c++/v1/__algorithm/ranges_merge.h","start":461587,"end":465955},{"filename":"/include/c++/v1/__algorithm/ranges_min.h","start":465955,"end":469478},{"filename":"/include/c++/v1/__algorithm/ranges_min_element.h","start":469478,"end":472144},{"filename":"/include/c++/v1/__algorithm/ranges_minmax.h","start":472144,"end":478320},{"filename":"/include/c++/v1/__algorithm/ranges_minmax_element.h","start":478320,"end":480905},{"filename":"/include/c++/v1/__algorithm/ranges_mismatch.h","start":480905,"end":484190},{"filename":"/include/c++/v1/__algorithm/ranges_move.h","start":484190,"end":486570},{"filename":"/include/c++/v1/__algorithm/ranges_move_backward.h","start":486570,"end":489165},{"filename":"/include/c++/v1/__algorithm/ranges_next_permutation.h","start":489165,"end":491789},{"filename":"/include/c++/v1/__algorithm/ranges_none_of.h","start":491789,"end":494080},{"filename":"/include/c++/v1/__algorithm/ranges_nth_element.h","start":494080,"end":496912},{"filename":"/include/c++/v1/__algorithm/ranges_partial_sort.h","start":496912,"end":499751},{"filename":"/include/c++/v1/__algorithm/ranges_partial_sort_copy.h","start":499751,"end":503563},{"filename":"/include/c++/v1/__algorithm/ranges_partition.h","start":503563,"end":506451},{"filename":"/include/c++/v1/__algorithm/ranges_partition_copy.h","start":506451,"end":510385},{"filename":"/include/c++/v1/__algorithm/ranges_partition_point.h","start":510385,"end":513217},{"filename":"/include/c++/v1/__algorithm/ranges_pop_heap.h","start":513217,"end":515987},{"filename":"/include/c++/v1/__algorithm/ranges_prev_permutation.h","start":515987,"end":518611},{"filename":"/include/c++/v1/__algorithm/ranges_push_heap.h","start":518611,"end":521340},{"filename":"/include/c++/v1/__algorithm/ranges_remove.h","start":521340,"end":523694},{"filename":"/include/c++/v1/__algorithm/ranges_remove_copy.h","start":523694,"end":526524},{"filename":"/include/c++/v1/__algorithm/ranges_remove_copy_if.h","start":526524,"end":529730},{"filename":"/include/c++/v1/__algorithm/ranges_remove_if.h","start":529730,"end":532509},{"filename":"/include/c++/v1/__algorithm/ranges_replace.h","start":532509,"end":535e3},{"filename":"/include/c++/v1/__algorithm/ranges_replace_copy.h","start":535e3,"end":538180},{"filename":"/include/c++/v1/__algorithm/ranges_replace_copy_if.h","start":538180,"end":541458},{"filename":"/include/c++/v1/__algorithm/ranges_replace_if.h","start":541458,"end":544079},{"filename":"/include/c++/v1/__algorithm/ranges_reverse.h","start":544079,"end":546257},{"filename":"/include/c++/v1/__algorithm/ranges_reverse_copy.h","start":546257,"end":548523},{"filename":"/include/c++/v1/__algorithm/ranges_rotate.h","start":548523,"end":550714},{"filename":"/include/c++/v1/__algorithm/ranges_rotate_copy.h","start":550714,"end":553e3},{"filename":"/include/c++/v1/__algorithm/ranges_sample.h","start":553e3,"end":555574},{"filename":"/include/c++/v1/__algorithm/ranges_search.h","start":555574,"end":560103},{"filename":"/include/c++/v1/__algorithm/ranges_search_n.h","start":560103,"end":564151},{"filename":"/include/c++/v1/__algorithm/ranges_set_difference.h","start":564151,"end":567639},{"filename":"/include/c++/v1/__algorithm/ranges_set_intersection.h","start":567639,"end":571440},{"filename":"/include/c++/v1/__algorithm/ranges_set_symmetric_difference.h","start":571440,"end":575377},{"filename":"/include/c++/v1/__algorithm/ranges_set_union.h","start":575377,"end":579093},{"filename":"/include/c++/v1/__algorithm/ranges_shuffle.h","start":579093,"end":581399},{"filename":"/include/c++/v1/__algorithm/ranges_sort.h","start":581399,"end":584041},{"filename":"/include/c++/v1/__algorithm/ranges_sort_heap.h","start":584041,"end":586770},{"filename":"/include/c++/v1/__algorithm/ranges_stable_partition.h","start":586770,"end":589870},{"filename":"/include/c++/v1/__algorithm/ranges_stable_sort.h","start":589870,"end":592562},{"filename":"/include/c++/v1/__algorithm/ranges_starts_with.h","start":592562,"end":595516},{"filename":"/include/c++/v1/__algorithm/ranges_swap_ranges.h","start":595516,"end":597733},{"filename":"/include/c++/v1/__algorithm/ranges_transform.h","start":597733,"end":603928},{"filename":"/include/c++/v1/__algorithm/ranges_unique.h","start":603928,"end":606699},{"filename":"/include/c++/v1/__algorithm/ranges_unique_copy.h","start":606699,"end":611228},{"filename":"/include/c++/v1/__algorithm/ranges_upper_bound.h","start":611228,"end":613992},{"filename":"/include/c++/v1/__algorithm/remove.h","start":613992,"end":615290},{"filename":"/include/c++/v1/__algorithm/remove_copy.h","start":615290,"end":616395},{"filename":"/include/c++/v1/__algorithm/remove_copy_if.h","start":616395,"end":617513},{"filename":"/include/c++/v1/__algorithm/remove_if.h","start":617513,"end":618827},{"filename":"/include/c++/v1/__algorithm/replace.h","start":618827,"end":619816},{"filename":"/include/c++/v1/__algorithm/replace_copy.h","start":619816,"end":620980},{"filename":"/include/c++/v1/__algorithm/replace_copy_if.h","start":620980,"end":622165},{"filename":"/include/c++/v1/__algorithm/replace_if.h","start":622165,"end":623172},{"filename":"/include/c++/v1/__algorithm/reverse.h","start":623172,"end":625404},{"filename":"/include/c++/v1/__algorithm/reverse_copy.h","start":625404,"end":626412},{"filename":"/include/c++/v1/__algorithm/rotate.h","start":626412,"end":634426},{"filename":"/include/c++/v1/__algorithm/rotate_copy.h","start":634426,"end":635459},{"filename":"/include/c++/v1/__algorithm/sample.h","start":635459,"end":639899},{"filename":"/include/c++/v1/__algorithm/search.h","start":639899,"end":648419},{"filename":"/include/c++/v1/__algorithm/search_n.h","start":648419,"end":656404},{"filename":"/include/c++/v1/__algorithm/set_difference.h","start":656404,"end":659133},{"filename":"/include/c++/v1/__algorithm/set_intersection.h","start":659133,"end":662601},{"filename":"/include/c++/v1/__algorithm/set_symmetric_difference.h","start":662601,"end":666457},{"filename":"/include/c++/v1/__algorithm/set_union.h","start":666457,"end":670076},{"filename":"/include/c++/v1/__algorithm/shift_left.h","start":670076,"end":671575},{"filename":"/include/c++/v1/__algorithm/shift_right.h","start":671575,"end":674708},{"filename":"/include/c++/v1/__algorithm/shuffle.h","start":674708,"end":680355},{"filename":"/include/c++/v1/__algorithm/sift_down.h","start":680355,"end":684360},{"filename":"/include/c++/v1/__algorithm/sort.h","start":684360,"end":726681},{"filename":"/include/c++/v1/__algorithm/sort_heap.h","start":726681,"end":729124},{"filename":"/include/c++/v1/__algorithm/stable_partition.h","start":729124,"end":741535},{"filename":"/include/c++/v1/__algorithm/stable_sort.h","start":741535,"end":752788},{"filename":"/include/c++/v1/__algorithm/swap_ranges.h","start":752788,"end":755074},{"filename":"/include/c++/v1/__algorithm/three_way_comp_ref_type.h","start":755074,"end":757412},{"filename":"/include/c++/v1/__algorithm/transform.h","start":757412,"end":758943},{"filename":"/include/c++/v1/__algorithm/uniform_random_bit_generator_adaptor.h","start":758943,"end":761234},{"filename":"/include/c++/v1/__algorithm/unique.h","start":761234,"end":763358},{"filename":"/include/c++/v1/__algorithm/unique_copy.h","start":763358,"end":768150},{"filename":"/include/c++/v1/__algorithm/unwrap_iter.h","start":768150,"end":771480},{"filename":"/include/c++/v1/__algorithm/unwrap_range.h","start":771480,"end":775413},{"filename":"/include/c++/v1/__algorithm/upper_bound.h","start":775413,"end":777991},{"filename":"/include/c++/v1/__assert","start":777991,"end":779919},{"filename":"/include/c++/v1/__atomic/aliases.h","start":779919,"end":784592},{"filename":"/include/c++/v1/__atomic/atomic.h","start":784592,"end":802658},{"filename":"/include/c++/v1/__atomic/atomic_base.h","start":802658,"end":813687},{"filename":"/include/c++/v1/__atomic/atomic_flag.h","start":813687,"end":820001},{"filename":"/include/c++/v1/__atomic/atomic_init.h","start":820001,"end":820939},{"filename":"/include/c++/v1/__atomic/atomic_lock_free.h","start":820939,"end":823187},{"filename":"/include/c++/v1/__atomic/atomic_sync.h","start":823187,"end":827405},{"filename":"/include/c++/v1/__atomic/check_memory_order.h","start":827405,"end":828837},{"filename":"/include/c++/v1/__atomic/contention_t.h","start":828837,"end":829820},{"filename":"/include/c++/v1/__atomic/cxx_atomic_impl.h","start":829820,"end":859947},{"filename":"/include/c++/v1/__atomic/fence.h","start":859947,"end":860901},{"filename":"/include/c++/v1/__atomic/is_always_lock_free.h","start":860901,"end":861780},{"filename":"/include/c++/v1/__atomic/kill_dependency.h","start":861780,"end":862548},{"filename":"/include/c++/v1/__atomic/memory_order.h","start":862548,"end":864806},{"filename":"/include/c++/v1/__availability","start":864806,"end":887349},{"filename":"/include/c++/v1/__bit/bit_cast.h","start":887349,"end":888451},{"filename":"/include/c++/v1/__bit/bit_ceil.h","start":888451,"end":889862},{"filename":"/include/c++/v1/__bit/bit_floor.h","start":889862,"end":890829},{"filename":"/include/c++/v1/__bit/bit_log2.h","start":890829,"end":891780},{"filename":"/include/c++/v1/__bit/bit_width.h","start":891780,"end":892723},{"filename":"/include/c++/v1/__bit/blsr.h","start":892723,"end":893772},{"filename":"/include/c++/v1/__bit/byteswap.h","start":893772,"end":895443},{"filename":"/include/c++/v1/__bit/countl.h","start":895443,"end":899266},{"filename":"/include/c++/v1/__bit/countr.h","start":899266,"end":901637},{"filename":"/include/c++/v1/__bit/endian.h","start":901637,"end":902526},{"filename":"/include/c++/v1/__bit/has_single_bit.h","start":902526,"end":903528},{"filename":"/include/c++/v1/__bit/popcount.h","start":903528,"end":905503},{"filename":"/include/c++/v1/__bit/rotate.h","start":905503,"end":907194},{"filename":"/include/c++/v1/__bit_reference","start":907194,"end":963269},{"filename":"/include/c++/v1/__charconv/chars_format.h","start":963269,"end":965317},{"filename":"/include/c++/v1/__charconv/from_chars_integral.h","start":965317,"end":973688},{"filename":"/include/c++/v1/__charconv/from_chars_result.h","start":973688,"end":974707},{"filename":"/include/c++/v1/__charconv/tables.h","start":974707,"end":983388},{"filename":"/include/c++/v1/__charconv/to_chars.h","start":983388,"end":984137},{"filename":"/include/c++/v1/__charconv/to_chars_base_10.h","start":984137,"end":991451},{"filename":"/include/c++/v1/__charconv/to_chars_floating_point.h","start":991451,"end":993793},{"filename":"/include/c++/v1/__charconv/to_chars_integral.h","start":993793,"end":1005054},{"filename":"/include/c++/v1/__charconv/to_chars_result.h","start":1005054,"end":1006055},{"filename":"/include/c++/v1/__charconv/traits.h","start":1006055,"end":1013230},{"filename":"/include/c++/v1/__chrono/calendar.h","start":1013230,"end":1014328},{"filename":"/include/c++/v1/__chrono/concepts.h","start":1014328,"end":1015344},{"filename":"/include/c++/v1/__chrono/convert_to_timespec.h","start":1015344,"end":1016876},{"filename":"/include/c++/v1/__chrono/convert_to_tm.h","start":1016876,"end":1024915},{"filename":"/include/c++/v1/__chrono/day.h","start":1024915,"end":1027999},{"filename":"/include/c++/v1/__chrono/duration.h","start":1027999,"end":1050307},{"filename":"/include/c++/v1/__chrono/file_clock.h","start":1050307,"end":1052625},{"filename":"/include/c++/v1/__chrono/formatter.h","start":1052625,"end":1085833},{"filename":"/include/c++/v1/__chrono/hh_mm_ss.h","start":1085833,"end":1089940},{"filename":"/include/c++/v1/__chrono/high_resolution_clock.h","start":1089940,"end":1090892},{"filename":"/include/c++/v1/__chrono/literals.h","start":1090892,"end":1092246},{"filename":"/include/c++/v1/__chrono/month.h","start":1092246,"end":1096015},{"filename":"/include/c++/v1/__chrono/month_weekday.h","start":1096015,"end":1099898},{"filename":"/include/c++/v1/__chrono/monthday.h","start":1099898,"end":1104126},{"filename":"/include/c++/v1/__chrono/ostream.h","start":1104126,"end":1116264},{"filename":"/include/c++/v1/__chrono/parser_std_format_spec.h","start":1116264,"end":1128944},{"filename":"/include/c++/v1/__chrono/statically_widen.h","start":1128944,"end":1130712},{"filename":"/include/c++/v1/__chrono/steady_clock.h","start":1130712,"end":1131972},{"filename":"/include/c++/v1/__chrono/system_clock.h","start":1131972,"end":1133472},{"filename":"/include/c++/v1/__chrono/time_point.h","start":1133472,"end":1142329},{"filename":"/include/c++/v1/__chrono/weekday.h","start":1142329,"end":1149207},{"filename":"/include/c++/v1/__chrono/year.h","start":1149207,"end":1153010},{"filename":"/include/c++/v1/__chrono/year_month.h","start":1153010,"end":1156996},{"filename":"/include/c++/v1/__chrono/year_month_day.h","start":1156996,"end":1171419},{"filename":"/include/c++/v1/__chrono/year_month_weekday.h","start":1171419,"end":1183710},{"filename":"/include/c++/v1/__compare/common_comparison_category.h","start":1183710,"end":1186364},{"filename":"/include/c++/v1/__compare/compare_partial_order_fallback.h","start":1186364,"end":1189996},{"filename":"/include/c++/v1/__compare/compare_strong_order_fallback.h","start":1189996,"end":1193251},{"filename":"/include/c++/v1/__compare/compare_three_way.h","start":1193251,"end":1194498},{"filename":"/include/c++/v1/__compare/compare_three_way_result.h","start":1194498,"end":1196032},{"filename":"/include/c++/v1/__compare/compare_weak_order_fallback.h","start":1196032,"end":1199262},{"filename":"/include/c++/v1/__compare/is_eq.h","start":1199262,"end":1200608},{"filename":"/include/c++/v1/__compare/ordering.h","start":1200608,"end":1210900},{"filename":"/include/c++/v1/__compare/partial_order.h","start":1210900,"end":1214340},{"filename":"/include/c++/v1/__compare/strong_order.h","start":1214340,"end":1220989},{"filename":"/include/c++/v1/__compare/synth_three_way.h","start":1220989,"end":1222751},{"filename":"/include/c++/v1/__compare/three_way_comparable.h","start":1222751,"end":1224883},{"filename":"/include/c++/v1/__compare/weak_order.h","start":1224883,"end":1229608},{"filename":"/include/c++/v1/__concepts/arithmetic.h","start":1229608,"end":1231162},{"filename":"/include/c++/v1/__concepts/assignable.h","start":1231162,"end":1232400},{"filename":"/include/c++/v1/__concepts/boolean_testable.h","start":1232400,"end":1233486},{"filename":"/include/c++/v1/__concepts/class_or_enum.h","start":1233486,"end":1234825},{"filename":"/include/c++/v1/__concepts/common_reference_with.h","start":1234825,"end":1235961},{"filename":"/include/c++/v1/__concepts/common_with.h","start":1235961,"end":1237582},{"filename":"/include/c++/v1/__concepts/constructible.h","start":1237582,"end":1239329},{"filename":"/include/c++/v1/__concepts/convertible_to.h","start":1239329,"end":1240303},{"filename":"/include/c++/v1/__concepts/copyable.h","start":1240303,"end":1241385},{"filename":"/include/c++/v1/__concepts/derived_from.h","start":1241385,"end":1242351},{"filename":"/include/c++/v1/__concepts/destructible.h","start":1242351,"end":1243228},{"filename":"/include/c++/v1/__concepts/different_from.h","start":1243228,"end":1244140},{"filename":"/include/c++/v1/__concepts/equality_comparable.h","start":1244140,"end":1245982},{"filename":"/include/c++/v1/__concepts/invocable.h","start":1245982,"end":1247130},{"filename":"/include/c++/v1/__concepts/movable.h","start":1247130,"end":1248136},{"filename":"/include/c++/v1/__concepts/predicate.h","start":1248136,"end":1249127},{"filename":"/include/c++/v1/__concepts/regular.h","start":1249127,"end":1250021},{"filename":"/include/c++/v1/__concepts/relation.h","start":1250021,"end":1251212},{"filename":"/include/c++/v1/__concepts/same_as.h","start":1251212,"end":1252162},{"filename":"/include/c++/v1/__concepts/semiregular.h","start":1252162,"end":1253062},{"filename":"/include/c++/v1/__concepts/swappable.h","start":1253062,"end":1257175},{"filename":"/include/c++/v1/__concepts/totally_ordered.h","start":1257175,"end":1259065},{"filename":"/include/c++/v1/__condition_variable/condition_variable.h","start":1259065,"end":1267914},{"filename":"/include/c++/v1/__config","start":1267914,"end":1331496},{"filename":"/include/c++/v1/__config_site","start":1331496,"end":1333222},{"filename":"/include/c++/v1/__coroutine/coroutine_handle.h","start":1333222,"end":1339593},{"filename":"/include/c++/v1/__coroutine/coroutine_traits.h","start":1339593,"end":1341188},{"filename":"/include/c++/v1/__coroutine/noop_coroutine_handle.h","start":1341188,"end":1344793},{"filename":"/include/c++/v1/__coroutine/trivial_awaitables.h","start":1344793,"end":1346204},{"filename":"/include/c++/v1/__cxxabi_config.h","start":1346204,"end":1349537},{"filename":"/include/c++/v1/__debug_utils/randomize_range.h","start":1349537,"end":1350882},{"filename":"/include/c++/v1/__debug_utils/strict_weak_ordering_check.h","start":1350882,"end":1354034},{"filename":"/include/c++/v1/__exception/exception.h","start":1354034,"end":1357054},{"filename":"/include/c++/v1/__exception/exception_ptr.h","start":1357054,"end":1360533},{"filename":"/include/c++/v1/__exception/nested_exception.h","start":1360533,"end":1364028},{"filename":"/include/c++/v1/__exception/operations.h","start":1364028,"end":1365758},{"filename":"/include/c++/v1/__exception/terminate.h","start":1365758,"end":1366512},{"filename":"/include/c++/v1/__expected/bad_expected_access.h","start":1366512,"end":1369092},{"filename":"/include/c++/v1/__expected/expected.h","start":1369092,"end":1434528},{"filename":"/include/c++/v1/__expected/unexpect.h","start":1434528,"end":1435352},{"filename":"/include/c++/v1/__expected/unexpected.h","start":1435352,"end":1440102},{"filename":"/include/c++/v1/__filesystem/copy_options.h","start":1440102,"end":1442533},{"filename":"/include/c++/v1/__filesystem/directory_entry.h","start":1442533,"end":1457534},{"filename":"/include/c++/v1/__filesystem/directory_iterator.h","start":1457534,"end":1462669},{"filename":"/include/c++/v1/__filesystem/directory_options.h","start":1462669,"end":1465317},{"filename":"/include/c++/v1/__filesystem/file_status.h","start":1465317,"end":1467503},{"filename":"/include/c++/v1/__filesystem/file_time_type.h","start":1467503,"end":1468418},{"filename":"/include/c++/v1/__filesystem/file_type.h","start":1468418,"end":1469485},{"filename":"/include/c++/v1/__filesystem/filesystem_error.h","start":1469485,"end":1472508},{"filename":"/include/c++/v1/__filesystem/operations.h","start":1472508,"end":1489802},{"filename":"/include/c++/v1/__filesystem/path.h","start":1489802,"end":1524219},{"filename":"/include/c++/v1/__filesystem/path_iterator.h","start":1524219,"end":1527987},{"filename":"/include/c++/v1/__filesystem/perm_options.h","start":1527987,"end":1530181},{"filename":"/include/c++/v1/__filesystem/perms.h","start":1530181,"end":1532724},{"filename":"/include/c++/v1/__filesystem/recursive_directory_iterator.h","start":1532724,"end":1538883},{"filename":"/include/c++/v1/__filesystem/space_info.h","start":1538883,"end":1539924},{"filename":"/include/c++/v1/__filesystem/u8path.h","start":1539924,"end":1543489},{"filename":"/include/c++/v1/__format/buffer.h","start":1543489,"end":1568293},{"filename":"/include/c++/v1/__format/concepts.h","start":1568293,"end":1571106},{"filename":"/include/c++/v1/__format/container_adaptor.h","start":1571106,"end":1573979},{"filename":"/include/c++/v1/__format/enable_insertable.h","start":1573979,"end":1574911},{"filename":"/include/c++/v1/__format/escaped_output_table.h","start":1574911,"end":1595153},{"filename":"/include/c++/v1/__format/extended_grapheme_cluster_table.h","start":1595153,"end":1625741},{"filename":"/include/c++/v1/__format/format_arg.h","start":1625741,"end":1637777},{"filename":"/include/c++/v1/__format/format_arg_store.h","start":1637777,"end":1647180},{"filename":"/include/c++/v1/__format/format_args.h","start":1647180,"end":1649690},{"filename":"/include/c++/v1/__format/format_context.h","start":1649690,"end":1658053},{"filename":"/include/c++/v1/__format/format_error.h","start":1658053,"end":1659547},{"filename":"/include/c++/v1/__format/format_functions.h","start":1659547,"end":1687451},{"filename":"/include/c++/v1/__format/format_fwd.h","start":1687451,"end":1688526},{"filename":"/include/c++/v1/__format/format_parse_context.h","start":1688526,"end":1692491},{"filename":"/include/c++/v1/__format/format_string.h","start":1692491,"end":1698e3},{"filename":"/include/c++/v1/__format/format_to_n_result.h","start":1698e3,"end":1698971},{"filename":"/include/c++/v1/__format/formatter.h","start":1698971,"end":1700522},{"filename":"/include/c++/v1/__format/formatter_bool.h","start":1700522,"end":1703203},{"filename":"/include/c++/v1/__format/formatter_char.h","start":1703203,"end":1706719},{"filename":"/include/c++/v1/__format/formatter_floating_point.h","start":1706719,"end":1741208},{"filename":"/include/c++/v1/__format/formatter_integer.h","start":1741208,"end":1745314},{"filename":"/include/c++/v1/__format/formatter_integral.h","start":1745314,"end":1761768},{"filename":"/include/c++/v1/__format/formatter_output.h","start":1761768,"end":1775255},{"filename":"/include/c++/v1/__format/formatter_pointer.h","start":1775255,"end":1778082},{"filename":"/include/c++/v1/__format/formatter_string.h","start":1778082,"end":1784248},{"filename":"/include/c++/v1/__format/formatter_tuple.h","start":1784248,"end":1790336},{"filename":"/include/c++/v1/__format/parser_std_format_spec.h","start":1790336,"end":1834048},{"filename":"/include/c++/v1/__format/range_default_formatter.h","start":1834048,"end":1843059},{"filename":"/include/c++/v1/__format/range_formatter.h","start":1843059,"end":1854764},{"filename":"/include/c++/v1/__format/unicode.h","start":1854764,"end":1873558},{"filename":"/include/c++/v1/__format/width_estimation_table.h","start":1873558,"end":1886395},{"filename":"/include/c++/v1/__format/write_escaped.h","start":1886395,"end":1894563},{"filename":"/include/c++/v1/__functional/binary_function.h","start":1894563,"end":1896530},{"filename":"/include/c++/v1/__functional/binary_negate.h","start":1896530,"end":1898343},{"filename":"/include/c++/v1/__functional/bind.h","start":1898343,"end":1910837},{"filename":"/include/c++/v1/__functional/bind_back.h","start":1910837,"end":1913719},{"filename":"/include/c++/v1/__functional/bind_front.h","start":1913719,"end":1915822},{"filename":"/include/c++/v1/__functional/binder1st.h","start":1915822,"end":1917772},{"filename":"/include/c++/v1/__functional/binder2nd.h","start":1917772,"end":1919701},{"filename":"/include/c++/v1/__functional/boyer_moore_searcher.h","start":1919701,"end":1931352},{"filename":"/include/c++/v1/__functional/compose.h","start":1931352,"end":1933499},{"filename":"/include/c++/v1/__functional/default_searcher.h","start":1933499,"end":1935328},{"filename":"/include/c++/v1/__functional/function.h","start":1935328,"end":1973247},{"filename":"/include/c++/v1/__functional/hash.h","start":1973247,"end":1993426},{"filename":"/include/c++/v1/__functional/identity.h","start":1993426,"end":1994873},{"filename":"/include/c++/v1/__functional/invoke.h","start":1994873,"end":1996913},{"filename":"/include/c++/v1/__functional/is_transparent.h","start":1996913,"end":1997921},{"filename":"/include/c++/v1/__functional/mem_fn.h","start":1997921,"end":1999477},{"filename":"/include/c++/v1/__functional/mem_fun_ref.h","start":1999477,"end":2005222},{"filename":"/include/c++/v1/__functional/not_fn.h","start":2005222,"end":2007027},{"filename":"/include/c++/v1/__functional/operations.h","start":2007027,"end":2025572},{"filename":"/include/c++/v1/__functional/perfect_forward.h","start":2025572,"end":2030358},{"filename":"/include/c++/v1/__functional/pointer_to_binary_function.h","start":2030358,"end":2031939},{"filename":"/include/c++/v1/__functional/pointer_to_unary_function.h","start":2031939,"end":2033495},{"filename":"/include/c++/v1/__functional/ranges_operations.h","start":2033495,"end":2036912},{"filename":"/include/c++/v1/__functional/reference_wrapper.h","start":2036912,"end":2040154},{"filename":"/include/c++/v1/__functional/unary_function.h","start":2040154,"end":2041841},{"filename":"/include/c++/v1/__functional/unary_negate.h","start":2041841,"end":2043456},{"filename":"/include/c++/v1/__functional/weak_result_type.h","start":2043456,"end":2051699},{"filename":"/include/c++/v1/__fwd/array.h","start":2051699,"end":2052413},{"filename":"/include/c++/v1/__fwd/fstream.h","start":2052413,"end":2054481},{"filename":"/include/c++/v1/__fwd/get.h","start":2054481,"end":2058044},{"filename":"/include/c++/v1/__fwd/hash.h","start":2058044,"end":2058717},{"filename":"/include/c++/v1/__fwd/ios.h","start":2058717,"end":2059911},{"filename":"/include/c++/v1/__fwd/istream.h","start":2059911,"end":2061301},{"filename":"/include/c++/v1/__fwd/mdspan.h","start":2061301,"end":2062849},{"filename":"/include/c++/v1/__fwd/memory_resource.h","start":2062849,"end":2063670},{"filename":"/include/c++/v1/__fwd/ostream.h","start":2063670,"end":2064713},{"filename":"/include/c++/v1/__fwd/pair.h","start":2064713,"end":2065393},{"filename":"/include/c++/v1/__fwd/span.h","start":2065393,"end":2066310},{"filename":"/include/c++/v1/__fwd/sstream.h","start":2066310,"end":2068757},{"filename":"/include/c++/v1/__fwd/streambuf.h","start":2068757,"end":2069822},{"filename":"/include/c++/v1/__fwd/string.h","start":2069822,"end":2072785},{"filename":"/include/c++/v1/__fwd/string_view.h","start":2072785,"end":2074328},{"filename":"/include/c++/v1/__fwd/subrange.h","start":2074328,"end":2075375},{"filename":"/include/c++/v1/__fwd/tuple.h","start":2075375,"end":2076112},{"filename":"/include/c++/v1/__hash_table","start":2076112,"end":2167667},{"filename":"/include/c++/v1/__ios/fpos.h","start":2167667,"end":2169701},{"filename":"/include/c++/v1/__iterator/access.h","start":2169701,"end":2172244},{"filename":"/include/c++/v1/__iterator/advance.h","start":2172244,"end":2179612},{"filename":"/include/c++/v1/__iterator/back_insert_iterator.h","start":2179612,"end":2182447},{"filename":"/include/c++/v1/__iterator/bounded_iter.h","start":2182447,"end":2192191},{"filename":"/include/c++/v1/__iterator/common_iterator.h","start":2192191,"end":2204771},{"filename":"/include/c++/v1/__iterator/concepts.h","start":2204771,"end":2215896},{"filename":"/include/c++/v1/__iterator/counted_iterator.h","start":2215896,"end":2225337},{"filename":"/include/c++/v1/__iterator/cpp17_iterator_concepts.h","start":2225337,"end":2233079},{"filename":"/include/c++/v1/__iterator/data.h","start":2233079,"end":2234448},{"filename":"/include/c++/v1/__iterator/default_sentinel.h","start":2234448,"end":2235285},{"filename":"/include/c++/v1/__iterator/distance.h","start":2235285,"end":2238401},{"filename":"/include/c++/v1/__iterator/empty.h","start":2238401,"end":2239708},{"filename":"/include/c++/v1/__iterator/erase_if_container.h","start":2239708,"end":2240959},{"filename":"/include/c++/v1/__iterator/front_insert_iterator.h","start":2240959,"end":2243723},{"filename":"/include/c++/v1/__iterator/incrementable_traits.h","start":2243723,"end":2246300},{"filename":"/include/c++/v1/__iterator/indirectly_comparable.h","start":2246300,"end":2247362},{"filename":"/include/c++/v1/__iterator/insert_iterator.h","start":2247362,"end":2250435},{"filename":"/include/c++/v1/__iterator/istream_iterator.h","start":2250435,"end":2254238},{"filename":"/include/c++/v1/__iterator/istreambuf_iterator.h","start":2254238,"end":2258618},{"filename":"/include/c++/v1/__iterator/iter_move.h","start":2258618,"end":2261803},{"filename":"/include/c++/v1/__iterator/iter_swap.h","start":2261803,"end":2265766},{"filename":"/include/c++/v1/__iterator/iterator.h","start":2265766,"end":2266827},{"filename":"/include/c++/v1/__iterator/iterator_traits.h","start":2266827,"end":2287055},{"filename":"/include/c++/v1/__iterator/iterator_with_data.h","start":2287055,"end":2290188},{"filename":"/include/c++/v1/__iterator/mergeable.h","start":2290188,"end":2291510},{"filename":"/include/c++/v1/__iterator/move_iterator.h","start":2291510,"end":2304127},{"filename":"/include/c++/v1/__iterator/move_sentinel.h","start":2304127,"end":2305842},{"filename":"/include/c++/v1/__iterator/next.h","start":2305842,"end":2308308},{"filename":"/include/c++/v1/__iterator/ostream_iterator.h","start":2308308,"end":2310981},{"filename":"/include/c++/v1/__iterator/ostreambuf_iterator.h","start":2310981,"end":2313939},{"filename":"/include/c++/v1/__iterator/permutable.h","start":2313939,"end":2314926},{"filename":"/include/c++/v1/__iterator/prev.h","start":2314926,"end":2317141},{"filename":"/include/c++/v1/__iterator/projected.h","start":2317141,"end":2318382},{"filename":"/include/c++/v1/__iterator/ranges_iterator_traits.h","start":2318382,"end":2319716},{"filename":"/include/c++/v1/__iterator/readable_traits.h","start":2319716,"end":2322227},{"filename":"/include/c++/v1/__iterator/reverse_access.h","start":2322227,"end":2324800},{"filename":"/include/c++/v1/__iterator/reverse_iterator.h","start":2324800,"end":2345417},{"filename":"/include/c++/v1/__iterator/segmented_iterator.h","start":2345417,"end":2348522},{"filename":"/include/c++/v1/__iterator/size.h","start":2348522,"end":2350409},{"filename":"/include/c++/v1/__iterator/sortable.h","start":2350409,"end":2351495},{"filename":"/include/c++/v1/__iterator/unreachable_sentinel.h","start":2351495,"end":2352559},{"filename":"/include/c++/v1/__iterator/wrap_iter.h","start":2352559,"end":2360344},{"filename":"/include/c++/v1/__locale","start":2360344,"end":2417482},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/bsd_locale_defaults.h","start":2417482,"end":2419664},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/bsd_locale_fallbacks.h","start":2419664,"end":2424122},{"filename":"/include/c++/v1/__locale_dir/locale_base_api/locale_guard.h","start":2424122,"end":2427001},{"filename":"/include/c++/v1/__mbstate_t.h","start":2427001,"end":2429274},{"filename":"/include/c++/v1/__mdspan/default_accessor.h","start":2429274,"end":2431555},{"filename":"/include/c++/v1/__mdspan/extents.h","start":2431555,"end":2454714},{"filename":"/include/c++/v1/__mdspan/layout_left.h","start":2454714,"end":2463149},{"filename":"/include/c++/v1/__mdspan/layout_right.h","start":2463149,"end":2471471},{"filename":"/include/c++/v1/__mdspan/mdspan.h","start":2471471,"end":2487432},{"filename":"/include/c++/v1/__memory/addressof.h","start":2487432,"end":2489310},{"filename":"/include/c++/v1/__memory/align.h","start":2489310,"end":2490064},{"filename":"/include/c++/v1/__memory/aligned_alloc.h","start":2490064,"end":2492603},{"filename":"/include/c++/v1/__memory/allocate_at_least.h","start":2492603,"end":2494390},{"filename":"/include/c++/v1/__memory/allocation_guard.h","start":2494390,"end":2498042},{"filename":"/include/c++/v1/__memory/allocator.h","start":2498042,"end":2508046},{"filename":"/include/c++/v1/__memory/allocator_arg_t.h","start":2508046,"end":2510823},{"filename":"/include/c++/v1/__memory/allocator_destructor.h","start":2510823,"end":2512155},{"filename":"/include/c++/v1/__memory/allocator_traits.h","start":2512155,"end":2529197},{"filename":"/include/c++/v1/__memory/assume_aligned.h","start":2529197,"end":2530527},{"filename":"/include/c++/v1/__memory/auto_ptr.h","start":2530527,"end":2533407},{"filename":"/include/c++/v1/__memory/builtin_new_allocator.h","start":2533407,"end":2535781},{"filename":"/include/c++/v1/__memory/compressed_pair.h","start":2535781,"end":2543042},{"filename":"/include/c++/v1/__memory/concepts.h","start":2543042,"end":2545138},{"filename":"/include/c++/v1/__memory/construct_at.h","start":2545138,"end":2549587},{"filename":"/include/c++/v1/__memory/destruct_n.h","start":2549587,"end":2551675},{"filename":"/include/c++/v1/__memory/pointer_traits.h","start":2551675,"end":2559331},{"filename":"/include/c++/v1/__memory/ranges_construct_at.h","start":2559331,"end":2562759},{"filename":"/include/c++/v1/__memory/ranges_uninitialized_algorithms.h","start":2562759,"end":2575836},{"filename":"/include/c++/v1/__memory/raw_storage_iterator.h","start":2575836,"end":2578448},{"filename":"/include/c++/v1/__memory/shared_ptr.h","start":2578448,"end":2645697},{"filename":"/include/c++/v1/__memory/swap_allocator.h","start":2645697,"end":2647339},{"filename":"/include/c++/v1/__memory/temp_value.h","start":2647339,"end":2649063},{"filename":"/include/c++/v1/__memory/temporary_buffer.h","start":2649063,"end":2651654},{"filename":"/include/c++/v1/__memory/uninitialized_algorithms.h","start":2651654,"end":2678099},{"filename":"/include/c++/v1/__memory/unique_ptr.h","start":2678099,"end":2705371},{"filename":"/include/c++/v1/__memory/uses_allocator.h","start":2705371,"end":2706979},{"filename":"/include/c++/v1/__memory/uses_allocator_construction.h","start":2706979,"end":2716616},{"filename":"/include/c++/v1/__memory/voidify.h","start":2716616,"end":2717618},{"filename":"/include/c++/v1/__memory_resource/memory_resource.h","start":2717618,"end":2720478},{"filename":"/include/c++/v1/__memory_resource/monotonic_buffer_resource.h","start":2720478,"end":2724650},{"filename":"/include/c++/v1/__memory_resource/polymorphic_allocator.h","start":2724650,"end":2732649},{"filename":"/include/c++/v1/__memory_resource/pool_options.h","start":2732649,"end":2733611},{"filename":"/include/c++/v1/__memory_resource/synchronized_pool_resource.h","start":2733611,"end":2736692},{"filename":"/include/c++/v1/__memory_resource/unsynchronized_pool_resource.h","start":2736692,"end":2740343},{"filename":"/include/c++/v1/__mutex/lock_guard.h","start":2740343,"end":2741917},{"filename":"/include/c++/v1/__mutex/mutex.h","start":2741917,"end":2743644},{"filename":"/include/c++/v1/__mutex/tag_types.h","start":2743644,"end":2745045},{"filename":"/include/c++/v1/__mutex/unique_lock.h","start":2745045,"end":2750388},{"filename":"/include/c++/v1/__node_handle","start":2750388,"end":2758234},{"filename":"/include/c++/v1/__numeric/accumulate.h","start":2758234,"end":2759799},{"filename":"/include/c++/v1/__numeric/adjacent_difference.h","start":2759799,"end":2762237},{"filename":"/include/c++/v1/__numeric/exclusive_scan.h","start":2762237,"end":2764014},{"filename":"/include/c++/v1/__numeric/gcd_lcm.h","start":2764014,"end":2767341},{"filename":"/include/c++/v1/__numeric/inclusive_scan.h","start":2767341,"end":2769583},{"filename":"/include/c++/v1/__numeric/inner_product.h","start":2769583,"end":2771469},{"filename":"/include/c++/v1/__numeric/iota.h","start":2771469,"end":2772386},{"filename":"/include/c++/v1/__numeric/midpoint.h","start":2772386,"end":2775459},{"filename":"/include/c++/v1/__numeric/partial_sum.h","start":2775459,"end":2777635},{"filename":"/include/c++/v1/__numeric/pstl_reduce.h","start":2777635,"end":2780398},{"filename":"/include/c++/v1/__numeric/pstl_transform_reduce.h","start":2780398,"end":2783942},{"filename":"/include/c++/v1/__numeric/reduce.h","start":2783942,"end":2785716},{"filename":"/include/c++/v1/__numeric/transform_exclusive_scan.h","start":2785716,"end":2787151},{"filename":"/include/c++/v1/__numeric/transform_inclusive_scan.h","start":2787151,"end":2789095},{"filename":"/include/c++/v1/__numeric/transform_reduce.h","start":2789095,"end":2791618},{"filename":"/include/c++/v1/__pstl/internal/algorithm_fwd.h","start":2791618,"end":2855546},{"filename":"/include/c++/v1/__pstl/internal/algorithm_impl.h","start":2855546,"end":3015115},{"filename":"/include/c++/v1/__pstl/internal/execution_defs.h","start":3015115,"end":3017458},{"filename":"/include/c++/v1/__pstl/internal/execution_impl.h","start":3017458,"end":3020764},{"filename":"/include/c++/v1/__pstl/internal/glue_algorithm_defs.h","start":3020764,"end":3050289},{"filename":"/include/c++/v1/__pstl/internal/glue_algorithm_impl.h","start":3050289,"end":3095120},{"filename":"/include/c++/v1/__pstl/internal/glue_memory_defs.h","start":3095120,"end":3099007},{"filename":"/include/c++/v1/__pstl/internal/glue_memory_impl.h","start":3099007,"end":3115158},{"filename":"/include/c++/v1/__pstl/internal/glue_numeric_defs.h","start":3115158,"end":3119862},{"filename":"/include/c++/v1/__pstl/internal/glue_numeric_impl.h","start":3119862,"end":3127523},{"filename":"/include/c++/v1/__pstl/internal/memory_impl.h","start":3127523,"end":3131606},{"filename":"/include/c++/v1/__pstl/internal/numeric_fwd.h","start":3131606,"end":3136126},{"filename":"/include/c++/v1/__pstl/internal/numeric_impl.h","start":3136126,"end":3148930},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_for.h","start":3148930,"end":3151064},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_for_each.h","start":3151064,"end":3153056},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_invoke.h","start":3153056,"end":3154520},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_merge.h","start":3154520,"end":3158146},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_scan.h","start":3158146,"end":3162725},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_stable_partial_sort.h","start":3162725,"end":3163860},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_stable_sort.h","start":3163860,"end":3169793},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_transform_reduce.h","start":3169793,"end":3174293},{"filename":"/include/c++/v1/__pstl/internal/omp/parallel_transform_scan.h","start":3174293,"end":3175370},{"filename":"/include/c++/v1/__pstl/internal/omp/util.h","start":3175370,"end":3180864},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend.h","start":3180864,"end":3182010},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_omp.h","start":3182010,"end":3184094},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_serial.h","start":3184094,"end":3187661},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_tbb.h","start":3187661,"end":3232301},{"filename":"/include/c++/v1/__pstl/internal/parallel_backend_utils.h","start":3232301,"end":3241506},{"filename":"/include/c++/v1/__pstl/internal/unseq_backend_simd.h","start":3241506,"end":3266219},{"filename":"/include/c++/v1/__pstl/internal/utils.h","start":3266219,"end":3270309},{"filename":"/include/c++/v1/__pstl_algorithm","start":3270309,"end":3270823},{"filename":"/include/c++/v1/__pstl_memory","start":3270823,"end":3271325},{"filename":"/include/c++/v1/__pstl_numeric","start":3271325,"end":3271831},{"filename":"/include/c++/v1/__random/bernoulli_distribution.h","start":3271831,"end":3276341},{"filename":"/include/c++/v1/__random/binomial_distribution.h","start":3276341,"end":3283465},{"filename":"/include/c++/v1/__random/cauchy_distribution.h","start":3283465,"end":3288757},{"filename":"/include/c++/v1/__random/chi_squared_distribution.h","start":3288757,"end":3293269},{"filename":"/include/c++/v1/__random/clamp_to_integral.h","start":3293269,"end":3295482},{"filename":"/include/c++/v1/__random/default_random_engine.h","start":3295482,"end":3296258},{"filename":"/include/c++/v1/__random/discard_block_engine.h","start":3296258,"end":3302969},{"filename":"/include/c++/v1/__random/discrete_distribution.h","start":3302969,"end":3311465},{"filename":"/include/c++/v1/__random/exponential_distribution.h","start":3311465,"end":3316583},{"filename":"/include/c++/v1/__random/extreme_value_distribution.h","start":3316583,"end":3321915},{"filename":"/include/c++/v1/__random/fisher_f_distribution.h","start":3321915,"end":3327139},{"filename":"/include/c++/v1/__random/gamma_distribution.h","start":3327139,"end":3334048},{"filename":"/include/c++/v1/__random/generate_canonical.h","start":3334048,"end":3335741},{"filename":"/include/c++/v1/__random/geometric_distribution.h","start":3335741,"end":3340277},{"filename":"/include/c++/v1/__random/independent_bits_engine.h","start":3340277,"end":3349805},{"filename":"/include/c++/v1/__random/is_seed_sequence.h","start":3349805,"end":3350845},{"filename":"/include/c++/v1/__random/is_valid.h","start":3350845,"end":3353853},{"filename":"/include/c++/v1/__random/knuth_b.h","start":3353853,"end":3354644},{"filename":"/include/c++/v1/__random/linear_congruential_engine.h","start":3354644,"end":3369626},{"filename":"/include/c++/v1/__random/log2.h","start":3369626,"end":3371601},{"filename":"/include/c++/v1/__random/lognormal_distribution.h","start":3371601,"end":3376531},{"filename":"/include/c++/v1/__random/mersenne_twister_engine.h","start":3376531,"end":3401803},{"filename":"/include/c++/v1/__random/negative_binomial_distribution.h","start":3401803,"end":3408106},{"filename":"/include/c++/v1/__random/normal_distribution.h","start":3408106,"end":3414807},{"filename":"/include/c++/v1/__random/piecewise_constant_distribution.h","start":3414807,"end":3427138},{"filename":"/include/c++/v1/__random/piecewise_linear_distribution.h","start":3427138,"end":3439570},{"filename":"/include/c++/v1/__random/poisson_distribution.h","start":3439570,"end":3448849},{"filename":"/include/c++/v1/__random/random_device.h","start":3448849,"end":3451278},{"filename":"/include/c++/v1/__random/ranlux.h","start":3451278,"end":3452309},{"filename":"/include/c++/v1/__random/seed_seq.h","start":3452309,"end":3458022},{"filename":"/include/c++/v1/__random/shuffle_order_engine.h","start":3458022,"end":3467064},{"filename":"/include/c++/v1/__random/student_t_distribution.h","start":3467064,"end":3471971},{"filename":"/include/c++/v1/__random/subtract_with_carry_engine.h","start":3471971,"end":3484868},{"filename":"/include/c++/v1/__random/uniform_int_distribution.h","start":3484868,"end":3494518},{"filename":"/include/c++/v1/__random/uniform_random_bit_generator.h","start":3494518,"end":3495869},{"filename":"/include/c++/v1/__random/uniform_real_distribution.h","start":3495869,"end":3501120},{"filename":"/include/c++/v1/__random/weibull_distribution.h","start":3501120,"end":3506032},{"filename":"/include/c++/v1/__ranges/access.h","start":3506032,"end":3512893},{"filename":"/include/c++/v1/__ranges/all.h","start":3512893,"end":3515636},{"filename":"/include/c++/v1/__ranges/as_rvalue_view.h","start":3515636,"end":3519768},{"filename":"/include/c++/v1/__ranges/common_view.h","start":3519768,"end":3524200},{"filename":"/include/c++/v1/__ranges/concepts.h","start":3524200,"end":3528761},{"filename":"/include/c++/v1/__ranges/container_compatible_range.h","start":3528761,"end":3529767},{"filename":"/include/c++/v1/__ranges/counted.h","start":3529767,"end":3532755},{"filename":"/include/c++/v1/__ranges/dangling.h","start":3532755,"end":3533886},{"filename":"/include/c++/v1/__ranges/data.h","start":3533886,"end":3537196},{"filename":"/include/c++/v1/__ranges/drop_view.h","start":3537196,"end":3551355},{"filename":"/include/c++/v1/__ranges/drop_while_view.h","start":3551355,"end":3555998},{"filename":"/include/c++/v1/__ranges/elements_view.h","start":3555998,"end":3569481},{"filename":"/include/c++/v1/__ranges/empty.h","start":3569481,"end":3571741},{"filename":"/include/c++/v1/__ranges/empty_view.h","start":3571741,"end":3573395},{"filename":"/include/c++/v1/__ranges/enable_borrowed_range.h","start":3573395,"end":3574474},{"filename":"/include/c++/v1/__ranges/enable_view.h","start":3574474,"end":3575921},{"filename":"/include/c++/v1/__ranges/filter_view.h","start":3575921,"end":3585303},{"filename":"/include/c++/v1/__ranges/from_range.h","start":3585303,"end":3586136},{"filename":"/include/c++/v1/__ranges/iota_view.h","start":3586136,"end":3600490},{"filename":"/include/c++/v1/__ranges/istream_view.h","start":3600490,"end":3605246},{"filename":"/include/c++/v1/__ranges/join_view.h","start":3605246,"end":3620252},{"filename":"/include/c++/v1/__ranges/lazy_split_view.h","start":3620252,"end":3636042},{"filename":"/include/c++/v1/__ranges/movable_box.h","start":3636042,"end":3644445},{"filename":"/include/c++/v1/__ranges/non_propagating_cache.h","start":3644445,"end":3648220},{"filename":"/include/c++/v1/__ranges/owning_view.h","start":3648220,"end":3651600},{"filename":"/include/c++/v1/__ranges/range_adaptor.h","start":3651600,"end":3654975},{"filename":"/include/c++/v1/__ranges/rbegin.h","start":3654975,"end":3658892},{"filename":"/include/c++/v1/__ranges/ref_view.h","start":3658892,"end":3661610},{"filename":"/include/c++/v1/__ranges/rend.h","start":3661610,"end":3665586},{"filename":"/include/c++/v1/__ranges/repeat_view.h","start":3665586,"end":3674826},{"filename":"/include/c++/v1/__ranges/reverse_view.h","start":3674826,"end":3682292},{"filename":"/include/c++/v1/__ranges/single_view.h","start":3682292,"end":3685523},{"filename":"/include/c++/v1/__ranges/size.h","start":3685523,"end":3689970},{"filename":"/include/c++/v1/__ranges/split_view.h","start":3689970,"end":3698232},{"filename":"/include/c++/v1/__ranges/subrange.h","start":3698232,"end":3708527},{"filename":"/include/c++/v1/__ranges/take_view.h","start":3708527,"end":3722901},{"filename":"/include/c++/v1/__ranges/take_while_view.h","start":3722901,"end":3729405},{"filename":"/include/c++/v1/__ranges/to.h","start":3729405,"end":3740094},{"filename":"/include/c++/v1/__ranges/transform_view.h","start":3740094,"end":3754575},{"filename":"/include/c++/v1/__ranges/view_interface.h","start":3754575,"end":3759924},{"filename":"/include/c++/v1/__ranges/views.h","start":3759924,"end":3760726},{"filename":"/include/c++/v1/__ranges/zip_view.h","start":3760726,"end":3779718},{"filename":"/include/c++/v1/__split_buffer","start":3779718,"end":3805522},{"filename":"/include/c++/v1/__std_clang_module","start":3805522,"end":3811047},{"filename":"/include/c++/v1/__std_mbstate_t.h","start":3811047,"end":3811876},{"filename":"/include/c++/v1/__stop_token/atomic_unique_lock.h","start":3811876,"end":3818225},{"filename":"/include/c++/v1/__stop_token/intrusive_list_view.h","start":3818225,"end":3821080},{"filename":"/include/c++/v1/__stop_token/intrusive_shared_ptr.h","start":3821080,"end":3825699},{"filename":"/include/c++/v1/__stop_token/stop_callback.h","start":3825699,"end":3829480},{"filename":"/include/c++/v1/__stop_token/stop_source.h","start":3829480,"end":3832600},{"filename":"/include/c++/v1/__stop_token/stop_state.h","start":3832600,"end":3842856},{"filename":"/include/c++/v1/__stop_token/stop_token.h","start":3842856,"end":3845248},{"filename":"/include/c++/v1/__string/char_traits.h","start":3845248,"end":3876041},{"filename":"/include/c++/v1/__string/constexpr_c_functions.h","start":3876041,"end":3885036},{"filename":"/include/c++/v1/__string/extern_template_lists.h","start":3885036,"end":3898475},{"filename":"/include/c++/v1/__support/android/locale_bionic.h","start":3898475,"end":3900498},{"filename":"/include/c++/v1/__support/fuchsia/xlocale.h","start":3900498,"end":3901216},{"filename":"/include/c++/v1/__support/ibm/gettod_zos.h","start":3901216,"end":3902860},{"filename":"/include/c++/v1/__support/ibm/locale_mgmt_zos.h","start":3902860,"end":3904540},{"filename":"/include/c++/v1/__support/ibm/nanosleep.h","start":3904540,"end":3906399},{"filename":"/include/c++/v1/__support/ibm/xlocale.h","start":3906399,"end":3909889},{"filename":"/include/c++/v1/__support/musl/xlocale.h","start":3909889,"end":3911688},{"filename":"/include/c++/v1/__support/newlib/xlocale.h","start":3911688,"end":3912459},{"filename":"/include/c++/v1/__support/openbsd/xlocale.h","start":3912459,"end":3913457},{"filename":"/include/c++/v1/__support/win32/locale_win32.h","start":3913457,"end":3923609},{"filename":"/include/c++/v1/__support/xlocale/__nop_locale_mgmt.h","start":3923609,"end":3925128},{"filename":"/include/c++/v1/__support/xlocale/__posix_l_fallback.h","start":3925128,"end":3929785},{"filename":"/include/c++/v1/__support/xlocale/__strtonum_fallback.h","start":3929785,"end":3932190},{"filename":"/include/c++/v1/__system_error/errc.h","start":3932190,"end":3941435},{"filename":"/include/c++/v1/__system_error/error_category.h","start":3941435,"end":3943997},{"filename":"/include/c++/v1/__system_error/error_code.h","start":3943997,"end":3948690},{"filename":"/include/c++/v1/__system_error/error_condition.h","start":3948690,"end":3952939},{"filename":"/include/c++/v1/__system_error/system_error.h","start":3952939,"end":3954586},{"filename":"/include/c++/v1/__thread/formatter.h","start":3954586,"end":3957742},{"filename":"/include/c++/v1/__thread/id.h","start":3957742,"end":3961783},{"filename":"/include/c++/v1/__thread/poll_with_backoff.h","start":3961783,"end":3964575},{"filename":"/include/c++/v1/__thread/this_thread.h","start":3964575,"end":3967078},{"filename":"/include/c++/v1/__thread/thread.h","start":3967078,"end":3976424},{"filename":"/include/c++/v1/__thread/timed_backoff_policy.h","start":3976424,"end":3977734},{"filename":"/include/c++/v1/__threading_support","start":3977734,"end":3993005},{"filename":"/include/c++/v1/__tree","start":3993005,"end":4097416},{"filename":"/include/c++/v1/__tuple/make_tuple_types.h","start":4097416,"end":4100325},{"filename":"/include/c++/v1/__tuple/pair_like.h","start":4100325,"end":4101243},{"filename":"/include/c++/v1/__tuple/sfinae_helpers.h","start":4101243,"end":4107952},{"filename":"/include/c++/v1/__tuple/tuple_element.h","start":4107952,"end":4110782},{"filename":"/include/c++/v1/__tuple/tuple_indices.h","start":4110782,"end":4111805},{"filename":"/include/c++/v1/__tuple/tuple_like.h","start":4111805,"end":4113279},{"filename":"/include/c++/v1/__tuple/tuple_like_ext.h","start":4113279,"end":4114848},{"filename":"/include/c++/v1/__tuple/tuple_size.h","start":4114848,"end":4117269},{"filename":"/include/c++/v1/__tuple/tuple_types.h","start":4117269,"end":4117969},{"filename":"/include/c++/v1/__type_traits/add_const.h","start":4117969,"end":4118844},{"filename":"/include/c++/v1/__type_traits/add_cv.h","start":4118844,"end":4119710},{"filename":"/include/c++/v1/__type_traits/add_lvalue_reference.h","start":4119710,"end":4121224},{"filename":"/include/c++/v1/__type_traits/add_pointer.h","start":4121224,"end":4122923},{"filename":"/include/c++/v1/__type_traits/add_rvalue_reference.h","start":4122923,"end":4124422},{"filename":"/include/c++/v1/__type_traits/add_volatile.h","start":4124422,"end":4125318},{"filename":"/include/c++/v1/__type_traits/aligned_storage.h","start":4125318,"end":4130441},{"filename":"/include/c++/v1/__type_traits/aligned_union.h","start":4130441,"end":4132159},{"filename":"/include/c++/v1/__type_traits/alignment_of.h","start":4132159,"end":4133136},{"filename":"/include/c++/v1/__type_traits/apply_cv.h","start":4133136,"end":4135268},{"filename":"/include/c++/v1/__type_traits/can_extract_key.h","start":4135268,"end":4137426},{"filename":"/include/c++/v1/__type_traits/common_reference.h","start":4137426,"end":4144838},{"filename":"/include/c++/v1/__type_traits/common_type.h","start":4144838,"end":4148344},{"filename":"/include/c++/v1/__type_traits/conditional.h","start":4148344,"end":4150067},{"filename":"/include/c++/v1/__type_traits/conjunction.h","start":4150067,"end":4151912},{"filename":"/include/c++/v1/__type_traits/copy_cv.h","start":4151912,"end":4153328},{"filename":"/include/c++/v1/__type_traits/copy_cvref.h","start":4153328,"end":4154604},{"filename":"/include/c++/v1/__type_traits/datasizeof.h","start":4154604,"end":4156276},{"filename":"/include/c++/v1/__type_traits/decay.h","start":4156276,"end":4158280},{"filename":"/include/c++/v1/__type_traits/dependent_type.h","start":4158280,"end":4159047},{"filename":"/include/c++/v1/__type_traits/disjunction.h","start":4159047,"end":4160851},{"filename":"/include/c++/v1/__type_traits/enable_if.h","start":4160851,"end":4161926},{"filename":"/include/c++/v1/__type_traits/extent.h","start":4161926,"end":4163832},{"filename":"/include/c++/v1/__type_traits/has_unique_object_representation.h","start":4163832,"end":4165057},{"filename":"/include/c++/v1/__type_traits/has_virtual_destructor.h","start":4165057,"end":4166079},{"filename":"/include/c++/v1/__type_traits/integral_constant.h","start":4166079,"end":4167581},{"filename":"/include/c++/v1/__type_traits/invoke.h","start":4167581,"end":4185001},{"filename":"/include/c++/v1/__type_traits/is_abstract.h","start":4185001,"end":4185946},{"filename":"/include/c++/v1/__type_traits/is_aggregate.h","start":4185946,"end":4186925},{"filename":"/include/c++/v1/__type_traits/is_allocator.h","start":4186925,"end":4188028},{"filename":"/include/c++/v1/__type_traits/is_always_bitcastable.h","start":4188028,"end":4192478},{"filename":"/include/c++/v1/__type_traits/is_arithmetic.h","start":4192478,"end":4193566},{"filename":"/include/c++/v1/__type_traits/is_array.h","start":4193566,"end":4195105},{"filename":"/include/c++/v1/__type_traits/is_assignable.h","start":4195105,"end":4196081},{"filename":"/include/c++/v1/__type_traits/is_base_of.h","start":4196081,"end":4197051},{"filename":"/include/c++/v1/__type_traits/is_bounded_array.h","start":4197051,"end":4198314},{"filename":"/include/c++/v1/__type_traits/is_callable.h","start":4198314,"end":4199383},{"filename":"/include/c++/v1/__type_traits/is_char_like_type.h","start":4199383,"end":4200296},{"filename":"/include/c++/v1/__type_traits/is_class.h","start":4200296,"end":4201220},{"filename":"/include/c++/v1/__type_traits/is_compound.h","start":4201220,"end":4202557},{"filename":"/include/c++/v1/__type_traits/is_const.h","start":4202557,"end":4203834},{"filename":"/include/c++/v1/__type_traits/is_constant_evaluated.h","start":4203834,"end":4204839},{"filename":"/include/c++/v1/__type_traits/is_constructible.h","start":4204839,"end":4205850},{"filename":"/include/c++/v1/__type_traits/is_convertible.h","start":4205850,"end":4210885},{"filename":"/include/c++/v1/__type_traits/is_copy_assignable.h","start":4210885,"end":4212072},{"filename":"/include/c++/v1/__type_traits/is_copy_constructible.h","start":4212072,"end":4213234},{"filename":"/include/c++/v1/__type_traits/is_core_convertible.h","start":4213234,"end":4214566},{"filename":"/include/c++/v1/__type_traits/is_default_constructible.h","start":4214566,"end":4215586},{"filename":"/include/c++/v1/__type_traits/is_destructible.h","start":4215586,"end":4218450},{"filename":"/include/c++/v1/__type_traits/is_empty.h","start":4218450,"end":4219374},{"filename":"/include/c++/v1/__type_traits/is_enum.h","start":4219374,"end":4220291},{"filename":"/include/c++/v1/__type_traits/is_equality_comparable.h","start":4220291,"end":4223525},{"filename":"/include/c++/v1/__type_traits/is_execution_policy.h","start":4223525,"end":4225516},{"filename":"/include/c++/v1/__type_traits/is_final.h","start":4225516,"end":4226595},{"filename":"/include/c++/v1/__type_traits/is_floating_point.h","start":4226595,"end":4228027},{"filename":"/include/c++/v1/__type_traits/is_function.h","start":4228027,"end":4229295},{"filename":"/include/c++/v1/__type_traits/is_fundamental.h","start":4229295,"end":4230762},{"filename":"/include/c++/v1/__type_traits/is_implicitly_default_constructible.h","start":4230762,"end":4232632},{"filename":"/include/c++/v1/__type_traits/is_integral.h","start":4232632,"end":4235890},{"filename":"/include/c++/v1/__type_traits/is_literal_type.h","start":4235890,"end":4237112},{"filename":"/include/c++/v1/__type_traits/is_member_function_pointer.h","start":4237112,"end":4239046},{"filename":"/include/c++/v1/__type_traits/is_member_object_pointer.h","start":4239046,"end":4240536},{"filename":"/include/c++/v1/__type_traits/is_member_pointer.h","start":4240536,"end":4241990},{"filename":"/include/c++/v1/__type_traits/is_move_assignable.h","start":4241990,"end":4243141},{"filename":"/include/c++/v1/__type_traits/is_move_constructible.h","start":4243141,"end":4244239},{"filename":"/include/c++/v1/__type_traits/is_nothrow_assignable.h","start":4244239,"end":4245291},{"filename":"/include/c++/v1/__type_traits/is_nothrow_constructible.h","start":4245291,"end":4248094},{"filename":"/include/c++/v1/__type_traits/is_nothrow_convertible.h","start":4248094,"end":4249807},{"filename":"/include/c++/v1/__type_traits/is_nothrow_copy_assignable.h","start":4249807,"end":4251115},{"filename":"/include/c++/v1/__type_traits/is_nothrow_copy_constructible.h","start":4251115,"end":4252795},{"filename":"/include/c++/v1/__type_traits/is_nothrow_default_constructible.h","start":4252795,"end":4253875},{"filename":"/include/c++/v1/__type_traits/is_nothrow_destructible.h","start":4253875,"end":4256251},{"filename":"/include/c++/v1/__type_traits/is_nothrow_move_assignable.h","start":4256251,"end":4257490},{"filename":"/include/c++/v1/__type_traits/is_nothrow_move_constructible.h","start":4257490,"end":4259050},{"filename":"/include/c++/v1/__type_traits/is_null_pointer.h","start":4259050,"end":4260404},{"filename":"/include/c++/v1/__type_traits/is_object.h","start":4260404,"end":4261955},{"filename":"/include/c++/v1/__type_traits/is_pod.h","start":4261955,"end":4262865},{"filename":"/include/c++/v1/__type_traits/is_pointer.h","start":4262865,"end":4264948},{"filename":"/include/c++/v1/__type_traits/is_polymorphic.h","start":4264948,"end":4265914},{"filename":"/include/c++/v1/__type_traits/is_primary_template.h","start":4265914,"end":4266957},{"filename":"/include/c++/v1/__type_traits/is_reference.h","start":4266957,"end":4269533},{"filename":"/include/c++/v1/__type_traits/is_reference_wrapper.h","start":4269533,"end":4270665},{"filename":"/include/c++/v1/__type_traits/is_referenceable.h","start":4270665,"end":4271954},{"filename":"/include/c++/v1/__type_traits/is_same.h","start":4271954,"end":4273473},{"filename":"/include/c++/v1/__type_traits/is_scalar.h","start":4273473,"end":4275499},{"filename":"/include/c++/v1/__type_traits/is_scoped_enum.h","start":4275499,"end":4276807},{"filename":"/include/c++/v1/__type_traits/is_signed.h","start":4276807,"end":4278573},{"filename":"/include/c++/v1/__type_traits/is_signed_integer.h","start":4278573,"end":4280054},{"filename":"/include/c++/v1/__type_traits/is_specialization.h","start":4280054,"end":4281596},{"filename":"/include/c++/v1/__type_traits/is_standard_layout.h","start":4281596,"end":4282590},{"filename":"/include/c++/v1/__type_traits/is_swappable.h","start":4282590,"end":4287545},{"filename":"/include/c++/v1/__type_traits/is_trivial.h","start":4287545,"end":4288483},{"filename":"/include/c++/v1/__type_traits/is_trivially_assignable.h","start":4288483,"end":4289520},{"filename":"/include/c++/v1/__type_traits/is_trivially_constructible.h","start":4289520,"end":4290619},{"filename":"/include/c++/v1/__type_traits/is_trivially_copy_assignable.h","start":4290619,"end":4291943},{"filename":"/include/c++/v1/__type_traits/is_trivially_copy_constructible.h","start":4291943,"end":4293117},{"filename":"/include/c++/v1/__type_traits/is_trivially_copyable.h","start":4293117,"end":4294319},{"filename":"/include/c++/v1/__type_traits/is_trivially_default_constructible.h","start":4294319,"end":4295413},{"filename":"/include/c++/v1/__type_traits/is_trivially_destructible.h","start":4295413,"end":4296897},{"filename":"/include/c++/v1/__type_traits/is_trivially_lexicographically_comparable.h","start":4296897,"end":4299716},{"filename":"/include/c++/v1/__type_traits/is_trivially_move_assignable.h","start":4299716,"end":4300958},{"filename":"/include/c++/v1/__type_traits/is_trivially_move_constructible.h","start":4300958,"end":4302126},{"filename":"/include/c++/v1/__type_traits/is_unbounded_array.h","start":4302126,"end":4303358},{"filename":"/include/c++/v1/__type_traits/is_union.h","start":4303358,"end":4304282},{"filename":"/include/c++/v1/__type_traits/is_unsigned.h","start":4304282,"end":4306087},{"filename":"/include/c++/v1/__type_traits/is_unsigned_integer.h","start":4306087,"end":4307602},{"filename":"/include/c++/v1/__type_traits/is_valid_expansion.h","start":4307602,"end":4308701},{"filename":"/include/c++/v1/__type_traits/is_void.h","start":4308701,"end":4309969},{"filename":"/include/c++/v1/__type_traits/is_volatile.h","start":4309969,"end":4311288},{"filename":"/include/c++/v1/__type_traits/lazy.h","start":4311288,"end":4312030},{"filename":"/include/c++/v1/__type_traits/make_32_64_or_128_bit.h","start":4312030,"end":4313711},{"filename":"/include/c++/v1/__type_traits/make_const_lvalue_ref.h","start":4313711,"end":4314548},{"filename":"/include/c++/v1/__type_traits/make_signed.h","start":4314548,"end":4317512},{"filename":"/include/c++/v1/__type_traits/make_unsigned.h","start":4317512,"end":4321043},{"filename":"/include/c++/v1/__type_traits/maybe_const.h","start":4321043,"end":4321848},{"filename":"/include/c++/v1/__type_traits/nat.h","start":4321848,"end":4322717},{"filename":"/include/c++/v1/__type_traits/negation.h","start":4322717,"end":4323673},{"filename":"/include/c++/v1/__type_traits/noexcept_move_assign_container.h","start":4323673,"end":4325e3},{"filename":"/include/c++/v1/__type_traits/operation_traits.h","start":4325e3,"end":4325828},{"filename":"/include/c++/v1/__type_traits/predicate_traits.h","start":4325828,"end":4326654},{"filename":"/include/c++/v1/__type_traits/promote.h","start":4326654,"end":4329326},{"filename":"/include/c++/v1/__type_traits/rank.h","start":4329326,"end":4330757},{"filename":"/include/c++/v1/__type_traits/remove_all_extents.h","start":4330757,"end":4332332},{"filename":"/include/c++/v1/__type_traits/remove_const.h","start":4332332,"end":4333617},{"filename":"/include/c++/v1/__type_traits/remove_const_ref.h","start":4333617,"end":4334488},{"filename":"/include/c++/v1/__type_traits/remove_cv.h","start":4334488,"end":4335804},{"filename":"/include/c++/v1/__type_traits/remove_cvref.h","start":4335804,"end":4337222},{"filename":"/include/c++/v1/__type_traits/remove_extent.h","start":4337222,"end":4338647},{"filename":"/include/c++/v1/__type_traits/remove_pointer.h","start":4338647,"end":4340540},{"filename":"/include/c++/v1/__type_traits/remove_reference.h","start":4340540,"end":4342109},{"filename":"/include/c++/v1/__type_traits/remove_volatile.h","start":4342109,"end":4343442},{"filename":"/include/c++/v1/__type_traits/result_of.h","start":4343442,"end":4344683},{"filename":"/include/c++/v1/__type_traits/strip_signature.h","start":4344683,"end":4348123},{"filename":"/include/c++/v1/__type_traits/type_identity.h","start":4348123,"end":4349149},{"filename":"/include/c++/v1/__type_traits/type_list.h","start":4349149,"end":4350368},{"filename":"/include/c++/v1/__type_traits/underlying_type.h","start":4350368,"end":4351557},{"filename":"/include/c++/v1/__type_traits/unwrap_ref.h","start":4351557,"end":4353098},{"filename":"/include/c++/v1/__type_traits/void_t.h","start":4353098,"end":4353870},{"filename":"/include/c++/v1/__undef_macros","start":4353870,"end":4354428},{"filename":"/include/c++/v1/__utility/as_const.h","start":4354428,"end":4355401},{"filename":"/include/c++/v1/__utility/auto_cast.h","start":4355401,"end":4356131},{"filename":"/include/c++/v1/__utility/cmp.h","start":4356131,"end":4359437},{"filename":"/include/c++/v1/__utility/convert_to_integral.h","start":4359437,"end":4361911},{"filename":"/include/c++/v1/__utility/declval.h","start":4361911,"end":4362896},{"filename":"/include/c++/v1/__utility/exception_guard.h","start":4362896,"end":4368743},{"filename":"/include/c++/v1/__utility/exchange.h","start":4368743,"end":4370040},{"filename":"/include/c++/v1/__utility/forward.h","start":4370040,"end":4371304},{"filename":"/include/c++/v1/__utility/forward_like.h","start":4371304,"end":4372770},{"filename":"/include/c++/v1/__utility/in_place.h","start":4372770,"end":4374596},{"filename":"/include/c++/v1/__utility/integer_sequence.h","start":4374596,"end":4381105},{"filename":"/include/c++/v1/__utility/is_pointer_in_range.h","start":4381105,"end":4383672},{"filename":"/include/c++/v1/__utility/move.h","start":4383672,"end":4385257},{"filename":"/include/c++/v1/__utility/pair.h","start":4385257,"end":4417492},{"filename":"/include/c++/v1/__utility/piecewise_construct.h","start":4417492,"end":4418506},{"filename":"/include/c++/v1/__utility/priority_tag.h","start":4418506,"end":4419298},{"filename":"/include/c++/v1/__utility/rel_ops.h","start":4419298,"end":4420509},{"filename":"/include/c++/v1/__utility/swap.h","start":4420509,"end":4422396},{"filename":"/include/c++/v1/__utility/terminate_on_exception.h","start":4422396,"end":4423589},{"filename":"/include/c++/v1/__utility/to_underlying.h","start":4423589,"end":4424780},{"filename":"/include/c++/v1/__utility/unreachable.h","start":4424780,"end":4425764},{"filename":"/include/c++/v1/__variant/monostate.h","start":4425764,"end":4427722},{"filename":"/include/c++/v1/__verbose_abort","start":4427722,"end":4430429},{"filename":"/include/c++/v1/algorithm","start":4430429,"end":4532914},{"filename":"/include/c++/v1/any","start":4532914,"end":4554230},{"filename":"/include/c++/v1/array","start":4554230,"end":4576923},{"filename":"/include/c++/v1/atomic","start":4576923,"end":4601448},{"filename":"/include/c++/v1/barrier","start":4601448,"end":4613443},{"filename":"/include/c++/v1/bit","start":4613443,"end":4616039},{"filename":"/include/c++/v1/bitset","start":4616039,"end":4655860},{"filename":"/include/c++/v1/cassert","start":4655860,"end":4656722},{"filename":"/include/c++/v1/ccomplex","start":4656722,"end":4657417},{"filename":"/include/c++/v1/cctype","start":4657417,"end":4659927},{"filename":"/include/c++/v1/cerrno","start":4659927,"end":4661097},{"filename":"/include/c++/v1/cfenv","start":4661097,"end":4663507},{"filename":"/include/c++/v1/cfloat","start":4663507,"end":4665435},{"filename":"/include/c++/v1/charconv","start":4665435,"end":4668963},{"filename":"/include/c++/v1/chrono","start":4668963,"end":4704228},{"filename":"/include/c++/v1/cinttypes","start":4704228,"end":4708485},{"filename":"/include/c++/v1/ciso646","start":4708485,"end":4709157},{"filename":"/include/c++/v1/climits","start":4709157,"end":4710569},{"filename":"/include/c++/v1/clocale","start":4710569,"end":4712088},{"filename":"/include/c++/v1/cmath","start":4712088,"end":4738766},{"filename":"/include/c++/v1/codecvt","start":4738766,"end":4761427},{"filename":"/include/c++/v1/compare","start":4761427,"end":4768740},{"filename":"/include/c++/v1/complex","start":4768740,"end":4824579},{"filename":"/include/c++/v1/complex.h","start":4824579,"end":4825319},{"filename":"/include/c++/v1/concepts","start":4825319,"end":4830370},{"filename":"/include/c++/v1/condition_variable","start":4830370,"end":4838769},{"filename":"/include/c++/v1/coroutine","start":4838769,"end":4840665},{"filename":"/include/c++/v1/csetjmp","start":4840665,"end":4842031},{"filename":"/include/c++/v1/csignal","start":4842031,"end":4843369},{"filename":"/include/c++/v1/cstdarg","start":4843369,"end":4844598},{"filename":"/include/c++/v1/cstdbool","start":4844598,"end":4845396},{"filename":"/include/c++/v1/cstddef","start":4845396,"end":4849625},{"filename":"/include/c++/v1/cstdint","start":4849625,"end":4853628},{"filename":"/include/c++/v1/cstdio","start":4853628,"end":4859587},{"filename":"/include/c++/v1/cstdlib","start":4859587,"end":4865281},{"filename":"/include/c++/v1/cstring","start":4865281,"end":4868885},{"filename":"/include/c++/v1/ctgmath","start":4868885,"end":4869612},{"filename":"/include/c++/v1/ctime","start":4869612,"end":4871842},{"filename":"/include/c++/v1/ctype.h","start":4871842,"end":4873035},{"filename":"/include/c++/v1/cuchar","start":4873035,"end":4875211},{"filename":"/include/c++/v1/cwchar","start":4875211,"end":4885429},{"filename":"/include/c++/v1/cwctype","start":4885429,"end":4888224},{"filename":"/include/c++/v1/cxxabi.h","start":4888224,"end":4895461},{"filename":"/include/c++/v1/deque","start":4895461,"end":5005072},{"filename":"/include/c++/v1/errno.h","start":5005072,"end":5010258},{"filename":"/include/c++/v1/exception","start":5010258,"end":5012969},{"filename":"/include/c++/v1/execution","start":5012969,"end":5018143},{"filename":"/include/c++/v1/expected","start":5018143,"end":5019700},{"filename":"/include/c++/v1/experimental/__config","start":5019700,"end":5021671},{"filename":"/include/c++/v1/experimental/__memory","start":5021671,"end":5025697},{"filename":"/include/c++/v1/experimental/deque","start":5025697,"end":5026984},{"filename":"/include/c++/v1/experimental/forward_list","start":5026984,"end":5028334},{"filename":"/include/c++/v1/experimental/iterator","start":5028334,"end":5032811},{"filename":"/include/c++/v1/experimental/list","start":5032811,"end":5034089},{"filename":"/include/c++/v1/experimental/map","start":5034089,"end":5035931},{"filename":"/include/c++/v1/experimental/memory_resource","start":5035931,"end":5050941},{"filename":"/include/c++/v1/experimental/propagate_const","start":5050941,"end":5073037},{"filename":"/include/c++/v1/experimental/regex","start":5073037,"end":5075195},{"filename":"/include/c++/v1/experimental/set","start":5075195,"end":5076969},{"filename":"/include/c++/v1/experimental/simd","start":5076969,"end":5139521},{"filename":"/include/c++/v1/experimental/string","start":5139521,"end":5141740},{"filename":"/include/c++/v1/experimental/type_traits","start":5141740,"end":5147309},{"filename":"/include/c++/v1/experimental/unordered_map","start":5147309,"end":5149653},{"filename":"/include/c++/v1/experimental/unordered_set","start":5149653,"end":5151615},{"filename":"/include/c++/v1/experimental/utility","start":5151615,"end":5152727},{"filename":"/include/c++/v1/experimental/vector","start":5152727,"end":5154024},{"filename":"/include/c++/v1/ext/__hash","start":5154024,"end":5157312},{"filename":"/include/c++/v1/ext/hash_map","start":5157312,"end":5196700},{"filename":"/include/c++/v1/ext/hash_set","start":5196700,"end":5222254},{"filename":"/include/c++/v1/fenv.h","start":5222254,"end":5224161},{"filename":"/include/c++/v1/filesystem","start":5224161,"end":5246607},{"filename":"/include/c++/v1/float.h","start":5246607,"end":5248272},{"filename":"/include/c++/v1/format","start":5248272,"end":5256792},{"filename":"/include/c++/v1/forward_list","start":5256792,"end":5326253},{"filename":"/include/c++/v1/fstream","start":5326253,"end":5382022},{"filename":"/include/c++/v1/functional","start":5382022,"end":5401049},{"filename":"/include/c++/v1/future","start":5401049,"end":5471858},{"filename":"/include/c++/v1/initializer_list","start":5471858,"end":5474785},{"filename":"/include/c++/v1/inttypes.h","start":5474785,"end":5478721},{"filename":"/include/c++/v1/iomanip","start":5478721,"end":5497221},{"filename":"/include/c++/v1/ios","start":5497221,"end":5523749},{"filename":"/include/c++/v1/iosfwd","start":5523749,"end":5529500},{"filename":"/include/c++/v1/iostream","start":5529500,"end":5531083},{"filename":"/include/c++/v1/istream","start":5531083,"end":5579728},{"filename":"/include/c++/v1/iterator","start":5579728,"end":5611276},{"filename":"/include/c++/v1/latch","start":5611276,"end":5615119},{"filename":"/include/c++/v1/libcxx.imp","start":5615119,"end":5618850},{"filename":"/include/c++/v1/limits","start":5618850,"end":5659969},{"filename":"/include/c++/v1/limits.h","start":5659969,"end":5661596},{"filename":"/include/c++/v1/list","start":5661596,"end":5733389},{"filename":"/include/c++/v1/locale","start":5733389,"end":5888882},{"filename":"/include/c++/v1/locale.h","start":5888882,"end":5889859},{"filename":"/include/c++/v1/map","start":5889859,"end":5987525},{"filename":"/include/c++/v1/math.h","start":5987525,"end":6039669},{"filename":"/include/c++/v1/mdspan","start":6039669,"end":6053643},{"filename":"/include/c++/v1/memory","start":6053643,"end":6093347},{"filename":"/include/c++/v1/memory_resource","start":6093347,"end":6095416},{"filename":"/include/c++/v1/module.modulemap","start":6095416,"end":6206288},{"filename":"/include/c++/v1/mutex","start":6206288,"end":6224730},{"filename":"/include/c++/v1/new","start":6224730,"end":6239178},{"filename":"/include/c++/v1/numbers","start":6239178,"end":6246181},{"filename":"/include/c++/v1/numeric","start":6246181,"end":6253792},{"filename":"/include/c++/v1/optional","start":6253792,"end":6310084},{"filename":"/include/c++/v1/ostream","start":6310084,"end":6348443},{"filename":"/include/c++/v1/print","start":6348443,"end":6364289},{"filename":"/include/c++/v1/queue","start":6364289,"end":6406463},{"filename":"/include/c++/v1/random","start":6406463,"end":6463533},{"filename":"/include/c++/v1/ranges","start":6463533,"end":6476795},{"filename":"/include/c++/v1/ratio","start":6476795,"end":6493551},{"filename":"/include/c++/v1/regex","start":6493551,"end":6731614},{"filename":"/include/c++/v1/scoped_allocator","start":6731614,"end":6759425},{"filename":"/include/c++/v1/semaphore","start":6759425,"end":6766081},{"filename":"/include/c++/v1/set","start":6766081,"end":6835388},{"filename":"/include/c++/v1/setjmp.h","start":6835388,"end":6836235},{"filename":"/include/c++/v1/shared_mutex","start":6836235,"end":6851787},{"filename":"/include/c++/v1/source_location","start":6851787,"end":6854958},{"filename":"/include/c++/v1/span","start":6854958,"end":6879364},{"filename":"/include/c++/v1/sstream","start":6879364,"end":6928811},{"filename":"/include/c++/v1/stack","start":6928811,"end":6943681},{"filename":"/include/c++/v1/stdatomic.h","start":6943681,"end":6954303},{"filename":"/include/c++/v1/stdbool.h","start":6954303,"end":6955164},{"filename":"/include/c++/v1/stddef.h","start":6955164,"end":6956297},{"filename":"/include/c++/v1/stdexcept","start":6956297,"end":6965136},{"filename":"/include/c++/v1/stdint.h","start":6965136,"end":6967509},{"filename":"/include/c++/v1/stdio.h","start":6967509,"end":6971082},{"filename":"/include/c++/v1/stdlib.h","start":6971082,"end":6976221},{"filename":"/include/c++/v1/stop_token","start":6976221,"end":6977545},{"filename":"/include/c++/v1/streambuf","start":6977545,"end":6992034},{"filename":"/include/c++/v1/string","start":6992034,"end":7186933},{"filename":"/include/c++/v1/string.h","start":7186933,"end":7190987},{"filename":"/include/c++/v1/string_view","start":7190987,"end":7235512},{"filename":"/include/c++/v1/strstream","start":7235512,"end":7247308},{"filename":"/include/c++/v1/system_error","start":7247308,"end":7253378},{"filename":"/include/c++/v1/tgmath.h","start":7253378,"end":7254127},{"filename":"/include/c++/v1/thread","start":7254127,"end":7257379},{"filename":"/include/c++/v1/tuple","start":7257379,"end":7334119},{"filename":"/include/c++/v1/type_traits","start":7334119,"end":7362966},{"filename":"/include/c++/v1/typeindex","start":7362966,"end":7366548},{"filename":"/include/c++/v1/typeinfo","start":7366548,"end":7380936},{"filename":"/include/c++/v1/uchar.h","start":7380936,"end":7382518},{"filename":"/include/c++/v1/unordered_map","start":7382518,"end":7504005},{"filename":"/include/c++/v1/unordered_set","start":7504005,"end":7592266},{"filename":"/include/c++/v1/utility","start":7592266,"end":7603843},{"filename":"/include/c++/v1/valarray","start":7603843,"end":7739467},{"filename":"/include/c++/v1/variant","start":7739467,"end":7807930},{"filename":"/include/c++/v1/vector","start":7807930,"end":7935670},{"filename":"/include/c++/v1/version","start":7935670,"end":7966345},{"filename":"/include/c++/v1/wchar.h","start":7966345,"end":7975285},{"filename":"/include/c++/v1/wctype.h","start":7975285,"end":7977785},{"filename":"/include/complex.h","start":7977785,"end":7981854},{"filename":"/include/cpio.h","start":7981854,"end":7982405},{"filename":"/include/crypt.h","start":7982405,"end":7982682},{"filename":"/include/ctype.h","start":7982682,"end":7984469},{"filename":"/include/dirent.h","start":7984469,"end":7986667},{"filename":"/include/dlfcn.h","start":7986667,"end":7987842},{"filename":"/include/endian.h","start":7987842,"end":7989800},{"filename":"/include/err.h","start":7989800,"end":7990272},{"filename":"/include/errno.h","start":7990272,"end":7990779},{"filename":"/include/fcntl.h","start":7990779,"end":7996575},{"filename":"/include/features.h","start":7996575,"end":7997440},{"filename":"/include/fenv.h","start":7997440,"end":7997889},{"filename":"/include/float.h","start":7997889,"end":7999094},{"filename":"/include/fmtmsg.h","start":7999094,"end":7999835},{"filename":"/include/fnmatch.h","start":7999835,"end":8000221},{"filename":"/include/ftw.h","start":8000221,"end":8001091},{"filename":"/include/getopt.h","start":8001091,"end":8001650},{"filename":"/include/glob.h","start":8001650,"end":8002645},{"filename":"/include/iconv.h","start":8002645,"end":8003030},{"filename":"/include/ifaddrs.h","start":8003030,"end":8003622},{"filename":"/include/inttypes.h","start":8003622,"end":8008380},{"filename":"/include/iso646.h","start":8008380,"end":8008647},{"filename":"/include/langinfo.h","start":8008647,"end":8010467},{"filename":"/include/libgen.h","start":8010467,"end":8010628},{"filename":"/include/limits.h","start":8010628,"end":8015319},{"filename":"/include/locale.h","start":8015319,"end":8017159},{"filename":"/include/malloc.h","start":8017159,"end":8017821},{"filename":"/include/math.h","start":8017821,"end":8030259},{"filename":"/include/memory.h","start":8030259,"end":8030279},{"filename":"/include/monetary.h","start":8030279,"end":8030674},{"filename":"/include/mqueue.h","start":8030674,"end":8031776},{"filename":"/include/netinet/icmp6.h","start":8031776,"end":8040408},{"filename":"/include/netinet/igmp.h","start":8040408,"end":8041438},{"filename":"/include/netinet/in.h","start":8041438,"end":8054239},{"filename":"/include/netinet/in_systm.h","start":8054239,"end":8054384},{"filename":"/include/netinet/ip.h","start":8054384,"end":8058745},{"filename":"/include/netinet/ip6.h","start":8058745,"end":8061419},{"filename":"/include/netinet/ip_icmp.h","start":8061419,"end":8066079},{"filename":"/include/netinet/tcp.h","start":8066079,"end":8072517},{"filename":"/include/netinet/udp.h","start":8072517,"end":8073276},{"filename":"/include/netpacket/packet.h","start":8073276,"end":8074655},{"filename":"/include/nl_types.h","start":8074655,"end":8074971},{"filename":"/include/poll.h","start":8074971,"end":8076258},{"filename":"/include/pthread.h","start":8076258,"end":8085929},{"filename":"/include/regex.h","start":8085929,"end":8087156},{"filename":"/include/sched.h","start":8087156,"end":8091728},{"filename":"/include/search.h","start":8091728,"end":8093106},{"filename":"/include/semaphore.h","start":8093106,"end":8093916},{"filename":"/include/signal.h","start":8093916,"end":8102630},{"filename":"/include/stdalign.h","start":8102630,"end":8103039},{"filename":"/include/stdbool.h","start":8103039,"end":8103206},{"filename":"/include/stdc-predef.h","start":8103206,"end":8103433},{"filename":"/include/stdint.h","start":8103433,"end":8106011},{"filename":"/include/stdio.h","start":8106011,"end":8113045},{"filename":"/include/stdio_ext.h","start":8113045,"end":8113656},{"filename":"/include/stdlib.h","start":8113656,"end":8119898},{"filename":"/include/stdnoreturn.h","start":8119898,"end":8120027},{"filename":"/include/string.h","start":8120027,"end":8123845},{"filename":"/include/strings.h","start":8123845,"end":8124787},{"filename":"/include/stropts.h","start":8124787,"end":8127186},{"filename":"/include/sys/dir.h","start":8127186,"end":8127228},{"filename":"/include/sys/errno.h","start":8127228,"end":8127314},{"filename":"/include/sys/eventfd.h","start":8127314,"end":8127718},{"filename":"/include/sys/fcntl.h","start":8127718,"end":8127804},{"filename":"/include/sys/file.h","start":8127804,"end":8128065},{"filename":"/include/sys/ioctl.h","start":8128065,"end":8131269},{"filename":"/include/sys/mman.h","start":8131269,"end":8135057},{"filename":"/include/sys/param.h","start":8135057,"end":8135905},{"filename":"/include/sys/poll.h","start":8135905,"end":8135988},{"filename":"/include/sys/random.h","start":8135988,"end":8136502},{"filename":"/include/sys/reg.h","start":8136502,"end":8136612},{"filename":"/include/sys/resource.h","start":8136612,"end":8139307},{"filename":"/include/sys/select.h","start":8139307,"end":8140916},{"filename":"/include/sys/signal.h","start":8140916,"end":8141005},{"filename":"/include/sys/socket.h","start":8141005,"end":8153440},{"filename":"/include/sys/stat.h","start":8153440,"end":8157070},{"filename":"/include/sys/stropts.h","start":8157070,"end":8157091},{"filename":"/include/sys/syscall.h","start":8157091,"end":8157307},{"filename":"/include/sys/sysinfo.h","start":8157307,"end":8157941},{"filename":"/include/sys/time.h","start":8157941,"end":8160543},{"filename":"/include/sys/timeb.h","start":8160543,"end":8160899},{"filename":"/include/sys/times.h","start":8160899,"end":8161640},{"filename":"/include/sys/timex.h","start":8161640,"end":8163800},{"filename":"/include/sys/ttydefaults.h","start":8163800,"end":8164631},{"filename":"/include/sys/types.h","start":8164631,"end":8166541},{"filename":"/include/sys/uio.h","start":8166541,"end":8167608},{"filename":"/include/sys/un.h","start":8167608,"end":8168413},{"filename":"/include/sys/utsname.h","start":8168413,"end":8168785},{"filename":"/include/syscall.h","start":8168785,"end":8168810},{"filename":"/include/sysexits.h","start":8168810,"end":8169240},{"filename":"/include/tar.h","start":8169240,"end":8169818},{"filename":"/include/tgmath.h","start":8169818,"end":8178376},{"filename":"/include/threads.h","start":8178376,"end":8180171},{"filename":"/include/time.h","start":8180171,"end":8185962},{"filename":"/include/uchar.h","start":8185962,"end":8186591},{"filename":"/include/unistd.h","start":8186591,"end":8203872},{"filename":"/include/utime.h","start":8203872,"end":8204215},{"filename":"/include/values.h","start":8204215,"end":8205061},{"filename":"/include/wasi/api.h","start":8205061,"end":8262030},{"filename":"/include/wasi/libc-environ.h","start":8262030,"end":8263322},{"filename":"/include/wasi/libc-find-relpath.h","start":8263322,"end":8266505},{"filename":"/include/wasi/libc-nocwd.h","start":8266505,"end":8268706},{"filename":"/include/wasi/libc.h","start":8268706,"end":8271448},{"filename":"/include/wchar.h","start":8271448,"end":8278561},{"filename":"/include/wctype.h","start":8278561,"end":8280476},{"filename":"/lib/clang/17.0.6/lib/wasi/libclang_rt.builtins-wasm32.a","start":8280476,"end":8679128},{"filename":"/lib/clang/17/include/__clang_cuda_builtin_vars.h","start":8679128,"end":8684020},{"filename":"/lib/clang/17/include/__clang_cuda_cmath.h","start":8684020,"end":8702513},{"filename":"/lib/clang/17/include/__clang_cuda_complex_builtins.h","start":8702513,"end":8712094},{"filename":"/lib/clang/17/include/__clang_cuda_device_functions.h","start":8712094,"end":8770138},{"filename":"/lib/clang/17/include/__clang_cuda_intrinsics.h","start":8770138,"end":8800782},{"filename":"/lib/clang/17/include/__clang_cuda_libdevice_declares.h","start":8800782,"end":8823178},{"filename":"/lib/clang/17/include/__clang_cuda_math.h","start":8823178,"end":8839550},{"filename":"/lib/clang/17/include/__clang_cuda_math_forward_declares.h","start":8839550,"end":8848019},{"filename":"/lib/clang/17/include/__clang_cuda_runtime_wrapper.h","start":8848019,"end":8866048},{"filename":"/lib/clang/17/include/__clang_cuda_texture_intrinsics.h","start":8866048,"end":8898672},{"filename":"/lib/clang/17/include/__clang_hip_cmath.h","start":8898672,"end":8925641},{"filename":"/lib/clang/17/include/__clang_hip_libdevice_declares.h","start":8925641,"end":8945987},{"filename":"/lib/clang/17/include/__clang_hip_math.h","start":8945987,"end":8978716},{"filename":"/lib/clang/17/include/__clang_hip_runtime_wrapper.h","start":8978716,"end":8983473},{"filename":"/lib/clang/17/include/__clang_hip_stdlib.h","start":8983473,"end":8984696},{"filename":"/lib/clang/17/include/__stddef_max_align_t.h","start":8984696,"end":8985553},{"filename":"/lib/clang/17/include/__wmmintrin_aes.h","start":8985553,"end":8990822},{"filename":"/lib/clang/17/include/__wmmintrin_pclmul.h","start":8990822,"end":8992858},{"filename":"/lib/clang/17/include/adxintrin.h","start":8992858,"end":9000401},{"filename":"/lib/clang/17/include/altivec.h","start":9000401,"end":9714458},{"filename":"/lib/clang/17/include/ammintrin.h","start":9714458,"end":9722181},{"filename":"/lib/clang/17/include/amxcomplexintrin.h","start":9722181,"end":9729154},{"filename":"/lib/clang/17/include/amxfp16intrin.h","start":9729154,"end":9731016},{"filename":"/lib/clang/17/include/amxintrin.h","start":9731016,"end":9752638},{"filename":"/lib/clang/17/include/arm64intr.h","start":9752638,"end":9753631},{"filename":"/lib/clang/17/include/arm_acle.h","start":9753631,"end":9779902},{"filename":"/lib/clang/17/include/arm_bf16.h","start":9779902,"end":9780450},{"filename":"/lib/clang/17/include/arm_cde.h","start":9780450,"end":9813900},{"filename":"/lib/clang/17/include/arm_cmse.h","start":9813900,"end":9820257},{"filename":"/lib/clang/17/include/arm_fp16.h","start":9820257,"end":9837582},{"filename":"/lib/clang/17/include/arm_mve.h","start":9837582,"end":11392511},{"filename":"/lib/clang/17/include/arm_neon.h","start":11392511,"end":13966146},{"filename":"/lib/clang/17/include/arm_neon_sve_bridge.h","start":13966146,"end":13975854},{"filename":"/lib/clang/17/include/arm_sme_draft_spec_subject_to_change.h","start":13975854,"end":14037497},{"filename":"/lib/clang/17/include/arm_sve.h","start":14037497,"end":15625661},{"filename":"/lib/clang/17/include/armintr.h","start":15625661,"end":15626504},{"filename":"/lib/clang/17/include/avx2intrin.h","start":15626504,"end":15817955},{"filename":"/lib/clang/17/include/avx512bf16intrin.h","start":15817955,"end":15828719},{"filename":"/lib/clang/17/include/avx512bitalgintrin.h","start":15828719,"end":15831185},{"filename":"/lib/clang/17/include/avx512bwintrin.h","start":15831185,"end":15908325},{"filename":"/lib/clang/17/include/avx512cdintrin.h","start":15908325,"end":15912539},{"filename":"/lib/clang/17/include/avx512dqintrin.h","start":15912539,"end":15972702},{"filename":"/lib/clang/17/include/avx512erintrin.h","start":15972702,"end":15984817},{"filename":"/lib/clang/17/include/avx512fintrin.h","start":15984817,"end":16376644},{"filename":"/lib/clang/17/include/avx512fp16intrin.h","start":16376644,"end":16537035},{"filename":"/lib/clang/17/include/avx512ifmaintrin.h","start":16537035,"end":16539582},{"filename":"/lib/clang/17/include/avx512ifmavlintrin.h","start":16539582,"end":16543998},{"filename":"/lib/clang/17/include/avx512pfintrin.h","start":16543998,"end":16548632},{"filename":"/lib/clang/17/include/avx512vbmi2intrin.h","start":16548632,"end":16562117},{"filename":"/lib/clang/17/include/avx512vbmiintrin.h","start":16562117,"end":16565925},{"filename":"/lib/clang/17/include/avx512vbmivlintrin.h","start":16565925,"end":16573032},{"filename":"/lib/clang/17/include/avx512vlbf16intrin.h","start":16573032,"end":16592706},{"filename":"/lib/clang/17/include/avx512vlbitalgintrin.h","start":16592706,"end":16597039},{"filename":"/lib/clang/17/include/avx512vlbwintrin.h","start":16597039,"end":16721213},{"filename":"/lib/clang/17/include/avx512vlcdintrin.h","start":16721213,"end":16729055},{"filename":"/lib/clang/17/include/avx512vldqintrin.h","start":16729055,"end":16776582},{"filename":"/lib/clang/17/include/avx512vlfp16intrin.h","start":16776582,"end":16864143},{"filename":"/lib/clang/17/include/avx512vlintrin.h","start":16864143,"end":17194164},{"filename":"/lib/clang/17/include/avx512vlvbmi2intrin.h","start":17194164,"end":17220503},{"filename":"/lib/clang/17/include/avx512vlvnniintrin.h","start":17220503,"end":17233943},{"filename":"/lib/clang/17/include/avx512vlvp2intersectintrin.h","start":17233943,"end":17238493},{"filename":"/lib/clang/17/include/avx512vnniintrin.h","start":17238493,"end":17242809},{"filename":"/lib/clang/17/include/avx512vp2intersectintrin.h","start":17242809,"end":17245783},{"filename":"/lib/clang/17/include/avx512vpopcntdqintrin.h","start":17245783,"end":17247826},{"filename":"/lib/clang/17/include/avx512vpopcntdqvlintrin.h","start":17247826,"end":17251216},{"filename":"/lib/clang/17/include/avxifmaintrin.h","start":17251216,"end":17257102},{"filename":"/lib/clang/17/include/avxintrin.h","start":17257102,"end":17457199},{"filename":"/lib/clang/17/include/avxneconvertintrin.h","start":17457199,"end":17471631},{"filename":"/lib/clang/17/include/avxvnniint16intrin.h","start":17471631,"end":17489463},{"filename":"/lib/clang/17/include/avxvnniint8intrin.h","start":17489463,"end":17508583},{"filename":"/lib/clang/17/include/avxvnniintrin.h","start":17508583,"end":17519273},{"filename":"/lib/clang/17/include/bmi2intrin.h","start":17519273,"end":17526529},{"filename":"/lib/clang/17/include/bmiintrin.h","start":17526529,"end":17540984},{"filename":"/lib/clang/17/include/builtins.h","start":17540984,"end":17541725},{"filename":"/lib/clang/17/include/cet.h","start":17541725,"end":17543252},{"filename":"/lib/clang/17/include/cetintrin.h","start":17543252,"end":17546603},{"filename":"/lib/clang/17/include/cldemoteintrin.h","start":17546603,"end":17547810},{"filename":"/lib/clang/17/include/clflushoptintrin.h","start":17547810,"end":17549003},{"filename":"/lib/clang/17/include/clwbintrin.h","start":17549003,"end":17550232},{"filename":"/lib/clang/17/include/clzerointrin.h","start":17550232,"end":17551452},{"filename":"/lib/clang/17/include/cmpccxaddintrin.h","start":17551452,"end":17553835},{"filename":"/lib/clang/17/include/cpuid.h","start":17553835,"end":17565107},{"filename":"/lib/clang/17/include/crc32intrin.h","start":17565107,"end":17568454},{"filename":"/lib/clang/17/include/cuda_wrappers/algorithm","start":17568454,"end":17573066},{"filename":"/lib/clang/17/include/cuda_wrappers/bits/basic_string.h","start":17573066,"end":17573418},{"filename":"/lib/clang/17/include/cuda_wrappers/bits/basic_string.tcc","start":17573418,"end":17573772},{"filename":"/lib/clang/17/include/cuda_wrappers/bits/shared_ptr_base.h","start":17573772,"end":17574127},{"filename":"/lib/clang/17/include/cuda_wrappers/cmath","start":17574127,"end":17577671},{"filename":"/lib/clang/17/include/cuda_wrappers/complex","start":17577671,"end":17581289},{"filename":"/lib/clang/17/include/cuda_wrappers/new","start":17581289,"end":17584954},{"filename":"/lib/clang/17/include/emmintrin.h","start":17584954,"end":17782219},{"filename":"/lib/clang/17/include/enqcmdintrin.h","start":17782219,"end":17784386},{"filename":"/lib/clang/17/include/f16cintrin.h","start":17784386,"end":17789910},{"filename":"/lib/clang/17/include/float.h","start":17789910,"end":17795677},{"filename":"/lib/clang/17/include/fma4intrin.h","start":17795677,"end":17802663},{"filename":"/lib/clang/17/include/fmaintrin.h","start":17802663,"end":17831744},{"filename":"/lib/clang/17/include/fxsrintrin.h","start":17831744,"end":17834634},{"filename":"/lib/clang/17/include/gfniintrin.h","start":17834634,"end":17842381},{"filename":"/lib/clang/17/include/hexagon_circ_brev_intrinsics.h","start":17842381,"end":17858347},{"filename":"/lib/clang/17/include/hexagon_protos.h","start":17858347,"end":18241757},{"filename":"/lib/clang/17/include/hexagon_types.h","start":18241757,"end":18375216},{"filename":"/lib/clang/17/include/hlsl.h","start":18375216,"end":18375709},{"filename":"/lib/clang/17/include/hlsl/hlsl_basic_types.h","start":18375709,"end":18377533},{"filename":"/lib/clang/17/include/hlsl/hlsl_intrinsics.h","start":18377533,"end":18396221},{"filename":"/lib/clang/17/include/hresetintrin.h","start":18396221,"end":18397616},{"filename":"/lib/clang/17/include/htmintrin.h","start":18397616,"end":18403899},{"filename":"/lib/clang/17/include/htmxlintrin.h","start":18403899,"end":18413124},{"filename":"/lib/clang/17/include/hvx_hexagon_protos.h","start":18413124,"end":18673483},{"filename":"/lib/clang/17/include/ia32intrin.h","start":18673483,"end":18686512},{"filename":"/lib/clang/17/include/immintrin.h","start":18686512,"end":18710647},{"filename":"/lib/clang/17/include/intrin.h","start":18710647,"end":18739542},{"filename":"/lib/clang/17/include/inttypes.h","start":18739542,"end":18741858},{"filename":"/lib/clang/17/include/invpcidintrin.h","start":18741858,"end":18742622},{"filename":"/lib/clang/17/include/iso646.h","start":18742622,"end":18743278},{"filename":"/lib/clang/17/include/keylockerintrin.h","start":18743278,"end":18761687},{"filename":"/lib/clang/17/include/larchintrin.h","start":18761687,"end":18769679},{"filename":"/lib/clang/17/include/limits.h","start":18769679,"end":18773374},{"filename":"/lib/clang/17/include/llvm_libc_wrappers/ctype.h","start":18773374,"end":18775615},{"filename":"/lib/clang/17/include/llvm_libc_wrappers/inttypes.h","start":18775615,"end":18776569},{"filename":"/lib/clang/17/include/llvm_libc_wrappers/stdio.h","start":18776569,"end":18777505},{"filename":"/lib/clang/17/include/llvm_libc_wrappers/stdlib.h","start":18777505,"end":18778843},{"filename":"/lib/clang/17/include/llvm_libc_wrappers/string.h","start":18778843,"end":18780010},{"filename":"/lib/clang/17/include/lwpintrin.h","start":18780010,"end":18785125},{"filename":"/lib/clang/17/include/lzcntintrin.h","start":18785125,"end":18788377},{"filename":"/lib/clang/17/include/mm3dnow.h","start":18788377,"end":18792985},{"filename":"/lib/clang/17/include/mm_malloc.h","start":18792985,"end":18794914},{"filename":"/lib/clang/17/include/mmintrin.h","start":18794914,"end":18852236},{"filename":"/lib/clang/17/include/module.modulemap","start":18852236,"end":18855650},{"filename":"/lib/clang/17/include/movdirintrin.h","start":18855650,"end":18857262},{"filename":"/lib/clang/17/include/msa.h","start":18857262,"end":18882877},{"filename":"/lib/clang/17/include/mwaitxintrin.h","start":18882877,"end":18885121},{"filename":"/lib/clang/17/include/nmmintrin.h","start":18885121,"end":18885830},{"filename":"/lib/clang/17/include/opencl-c-base.h","start":18885830,"end":18916934},{"filename":"/lib/clang/17/include/opencl-c.h","start":18916934,"end":19812309},{"filename":"/lib/clang/17/include/openmp_wrappers/__clang_openmp_device_functions.h","start":19812309,"end":19814918},{"filename":"/lib/clang/17/include/openmp_wrappers/cmath","start":19814918,"end":19820170},{"filename":"/lib/clang/17/include/openmp_wrappers/complex","start":19820170,"end":19821972},{"filename":"/lib/clang/17/include/openmp_wrappers/complex.h","start":19821972,"end":19822870},{"filename":"/lib/clang/17/include/openmp_wrappers/complex_cmath.h","start":19822870,"end":19835293},{"filename":"/lib/clang/17/include/openmp_wrappers/math.h","start":19835293,"end":19837347},{"filename":"/lib/clang/17/include/openmp_wrappers/new","start":19837347,"end":19838756},{"filename":"/lib/clang/17/include/pconfigintrin.h","start":19838756,"end":19839972},{"filename":"/lib/clang/17/include/pkuintrin.h","start":19839972,"end":19840906},{"filename":"/lib/clang/17/include/pmmintrin.h","start":19840906,"end":19851655},{"filename":"/lib/clang/17/include/popcntintrin.h","start":19851655,"end":19853514},{"filename":"/lib/clang/17/include/ppc_wrappers/bmi2intrin.h","start":19853514,"end":19858185},{"filename":"/lib/clang/17/include/ppc_wrappers/bmiintrin.h","start":19858185,"end":19863187},{"filename":"/lib/clang/17/include/ppc_wrappers/emmintrin.h","start":19863187,"end":19934460},{"filename":"/lib/clang/17/include/ppc_wrappers/immintrin.h","start":19934460,"end":19935071},{"filename":"/lib/clang/17/include/ppc_wrappers/mm_malloc.h","start":19935071,"end":19936408},{"filename":"/lib/clang/17/include/ppc_wrappers/mmintrin.h","start":19936408,"end":19982171},{"filename":"/lib/clang/17/include/ppc_wrappers/pmmintrin.h","start":19982171,"end":19988069},{"filename":"/lib/clang/17/include/ppc_wrappers/smmintrin.h","start":19988069,"end":20011095},{"filename":"/lib/clang/17/include/ppc_wrappers/tmmintrin.h","start":20011095,"end":20027436},{"filename":"/lib/clang/17/include/ppc_wrappers/x86gprintrin.h","start":20027436,"end":20027935},{"filename":"/lib/clang/17/include/ppc_wrappers/x86intrin.h","start":20027935,"end":20029002},{"filename":"/lib/clang/17/include/ppc_wrappers/xmmintrin.h","start":20029002,"end":20093335},{"filename":"/lib/clang/17/include/prfchiintrin.h","start":20093335,"end":20095408},{"filename":"/lib/clang/17/include/prfchwintrin.h","start":20095408,"end":20097517},{"filename":"/lib/clang/17/include/ptwriteintrin.h","start":20097517,"end":20098593},{"filename":"/lib/clang/17/include/raointintrin.h","start":20098593,"end":20105341},{"filename":"/lib/clang/17/include/rdpruintrin.h","start":20105341,"end":20106965},{"filename":"/lib/clang/17/include/rdseedintrin.h","start":20106965,"end":20109884},{"filename":"/lib/clang/17/include/riscv_ntlh.h","start":20109884,"end":20110739},{"filename":"/lib/clang/17/include/riscv_vector.h","start":20110739,"end":20126960},{"filename":"/lib/clang/17/include/rtmintrin.h","start":20126960,"end":20128240},{"filename":"/lib/clang/17/include/s390intrin.h","start":20128240,"end":20128844},{"filename":"/lib/clang/17/include/serializeintrin.h","start":20128844,"end":20129725},{"filename":"/lib/clang/17/include/sgxintrin.h","start":20129725,"end":20131541},{"filename":"/lib/clang/17/include/sha512intrin.h","start":20131541,"end":20137629},{"filename":"/lib/clang/17/include/shaintrin.h","start":20137629,"end":20145180},{"filename":"/lib/clang/17/include/sifive_vector.h","start":20145180,"end":20145702},{"filename":"/lib/clang/17/include/sm3intrin.h","start":20145702,"end":20153172},{"filename":"/lib/clang/17/include/sm4intrin.h","start":20153172,"end":20161573},{"filename":"/lib/clang/17/include/smmintrin.h","start":20161573,"end":20263274},{"filename":"/lib/clang/17/include/stdalign.h","start":20263274,"end":20264185},{"filename":"/lib/clang/17/include/stdarg.h","start":20264185,"end":20265889},{"filename":"/lib/clang/17/include/stdatomic.h","start":20265889,"end":20274385},{"filename":"/lib/clang/17/include/stdbool.h","start":20274385,"end":20275447},{"filename":"/lib/clang/17/include/stddef.h","start":20275447,"end":20279704},{"filename":"/lib/clang/17/include/stdint.h","start":20279704,"end":20312974},{"filename":"/lib/clang/17/include/stdnoreturn.h","start":20312974,"end":20314171},{"filename":"/lib/clang/17/include/tbmintrin.h","start":20314171,"end":20317396},{"filename":"/lib/clang/17/include/tgmath.h","start":20317396,"end":20347785},{"filename":"/lib/clang/17/include/tmmintrin.h","start":20347785,"end":20378002},{"filename":"/lib/clang/17/include/tsxldtrkintrin.h","start":20378002,"end":20380017},{"filename":"/lib/clang/17/include/uintrintrin.h","start":20380017,"end":20385096},{"filename":"/lib/clang/17/include/unwind.h","start":20385096,"end":20396573},{"filename":"/lib/clang/17/include/vadefs.h","start":20396573,"end":20397993},{"filename":"/lib/clang/17/include/vaesintrin.h","start":20397993,"end":20400509},{"filename":"/lib/clang/17/include/varargs.h","start":20400509,"end":20400986},{"filename":"/lib/clang/17/include/vecintrin.h","start":20400986,"end":20770465},{"filename":"/lib/clang/17/include/velintrin.h","start":20770465,"end":20772618},{"filename":"/lib/clang/17/include/velintrin_approx.h","start":20772618,"end":20776241},{"filename":"/lib/clang/17/include/velintrin_gen.h","start":20776241,"end":20846962},{"filename":"/lib/clang/17/include/vpclmulqdqintrin.h","start":20846962,"end":20848048},{"filename":"/lib/clang/17/include/waitpkgintrin.h","start":20848048,"end":20849405},{"filename":"/lib/clang/17/include/wasm_simd128.h","start":20849405,"end":20927487},{"filename":"/lib/clang/17/include/wbnoinvdintrin.h","start":20927487,"end":20928236},{"filename":"/lib/clang/17/include/wmmintrin.h","start":20928236,"end":20928895},{"filename":"/lib/clang/17/include/x86gprintrin.h","start":20928895,"end":20931267},{"filename":"/lib/clang/17/include/x86intrin.h","start":20931267,"end":20933116},{"filename":"/lib/clang/17/include/xmmintrin.h","start":20933116,"end":21042408},{"filename":"/lib/clang/17/include/xopintrin.h","start":21042408,"end":21062842},{"filename":"/lib/clang/17/include/xsavecintrin.h","start":21062842,"end":21065416},{"filename":"/lib/clang/17/include/xsaveintrin.h","start":21065416,"end":21067094},{"filename":"/lib/clang/17/include/xsaveoptintrin.h","start":21067094,"end":21068120},{"filename":"/lib/clang/17/include/xsavesintrin.h","start":21068120,"end":21069388},{"filename":"/lib/clang/17/include/xtestintrin.h","start":21069388,"end":21070261},{"filename":"/lib/wasm32-wasi-threads/crt1-command.o","start":21070261,"end":21070869},{"filename":"/lib/wasm32-wasi-threads/crt1-reactor.o","start":21070869,"end":21071382},{"filename":"/lib/wasm32-wasi-threads/crt1.o","start":21071382,"end":21071990},{"filename":"/lib/wasm32-wasi-threads/libc++.a","start":21071990,"end":24287444},{"filename":"/lib/wasm32-wasi-threads/libc++abi.a","start":24287444,"end":25007768},{"filename":"/lib/wasm32-wasi-threads/libc++experimental.a","start":25007768,"end":25023858},{"filename":"/lib/wasm32-wasi-threads/libc-printscan-long-double.a","start":25023858,"end":25061686},{"filename":"/lib/wasm32-wasi-threads/libc-printscan-no-floating-point.a","start":25061686,"end":25092614},{"filename":"/lib/wasm32-wasi-threads/libc.a","start":25092614,"end":26019600},{"filename":"/lib/wasm32-wasi-threads/libc.imports","start":26019600,"end":26021770},{"filename":"/lib/wasm32-wasi-threads/libcrypt.a","start":26021770,"end":26021778},{"filename":"/lib/wasm32-wasi-threads/libdl.a","start":26021778,"end":26022586},{"filename":"/lib/wasm32-wasi-threads/libm.a","start":26022586,"end":26022594},{"filename":"/lib/wasm32-wasi-threads/libpthread.a","start":26022594,"end":26022602},{"filename":"/lib/wasm32-wasi-threads/libresolv.a","start":26022602,"end":26022610},{"filename":"/lib/wasm32-wasi-threads/librt.a","start":26022610,"end":26022618},{"filename":"/lib/wasm32-wasi-threads/libutil.a","start":26022618,"end":26022626},{"filename":"/lib/wasm32-wasi-threads/libwasi-emulated-getpid.a","start":26022626,"end":26022988},{"filename":"/lib/wasm32-wasi-threads/libwasi-emulated-mman.a","start":26022988,"end":26023968},{"filename":"/lib/wasm32-wasi-threads/libwasi-emulated-process-clocks.a","start":26023968,"end":26025694},{"filename":"/lib/wasm32-wasi-threads/libwasi-emulated-signal.a","start":26025694,"end":26030300},{"filename":"/lib/wasm32-wasi-threads/libxnet.a","start":26030300,"end":26030308},{"filename":"/lib/wasm32-wasi/crt1-command.o","start":26030308,"end":26030881},{"filename":"/lib/wasm32-wasi/crt1-reactor.o","start":26030881,"end":26031359},{"filename":"/lib/wasm32-wasi/crt1.o","start":26031359,"end":26031932},{"filename":"/lib/wasm32-wasi/libc++.a","start":26031932,"end":29001718},{"filename":"/lib/wasm32-wasi/libc++.so","start":29001718,"end":31358233},{"filename":"/lib/wasm32-wasi/libc++abi.a","start":31358233,"end":32078857},{"filename":"/lib/wasm32-wasi/libc++abi.so","start":32078857,"end":32640590},{"filename":"/lib/wasm32-wasi/libc++experimental.a","start":32640590,"end":32656892},{"filename":"/lib/wasm32-wasi/libc-printscan-long-double.a","start":32656892,"end":32694420},{"filename":"/lib/wasm32-wasi/libc-printscan-no-floating-point.a","start":32694420,"end":32724934},{"filename":"/lib/wasm32-wasi/libc.a","start":32724934,"end":33572042},{"filename":"/lib/wasm32-wasi/libc.imports","start":33572042,"end":33574183},{"filename":"/lib/wasm32-wasi/libc.so","start":33574183,"end":34205149},{"filename":"/lib/wasm32-wasi/libcrypt.a","start":34205149,"end":34205157},{"filename":"/lib/wasm32-wasi/libdl.a","start":34205157,"end":34205943},{"filename":"/lib/wasm32-wasi/libdl.so","start":34205943,"end":34206774},{"filename":"/lib/wasm32-wasi/libm.a","start":34206774,"end":34206782},{"filename":"/lib/wasm32-wasi/libpthread.a","start":34206782,"end":34206790},{"filename":"/lib/wasm32-wasi/libresolv.a","start":34206790,"end":34206798},{"filename":"/lib/wasm32-wasi/librt.a","start":34206798,"end":34206806},{"filename":"/lib/wasm32-wasi/libutil.a","start":34206806,"end":34206814},{"filename":"/lib/wasm32-wasi/libwasi-emulated-getpid.a","start":34206814,"end":34207154},{"filename":"/lib/wasm32-wasi/libwasi-emulated-getpid.so","start":34207154,"end":34207621},{"filename":"/lib/wasm32-wasi/libwasi-emulated-mman.a","start":34207621,"end":34208523},{"filename":"/lib/wasm32-wasi/libwasi-emulated-mman.so","start":34208523,"end":34209510},{"filename":"/lib/wasm32-wasi/libwasi-emulated-process-clocks.a","start":34209510,"end":34211148},{"filename":"/lib/wasm32-wasi/libwasi-emulated-process-clocks.so","start":34211148,"end":34212199},{"filename":"/lib/wasm32-wasi/libwasi-emulated-signal.a","start":34212199,"end":34216555},{"filename":"/lib/wasm32-wasi/libwasi-emulated-signal.so","start":34216555,"end":34220254},{"filename":"/lib/wasm32-wasi/libxnet.a","start":34220254,"end":34220262},{"filename":"/share/wasm32-wasi-threads/defined-symbols.txt","start":34220262,"end":34235764},{"filename":"/share/wasm32-wasi-threads/include-all.c","start":34235764,"end":34240049},{"filename":"/share/wasm32-wasi-threads/predefined-macros.txt","start":34240049,"end":34353085},{"filename":"/share/wasm32-wasi-threads/undefined-symbols.txt","start":34353085,"end":34355586},{"filename":"/share/wasm32-wasi/defined-symbols.txt","start":34355586,"end":34367965},{"filename":"/share/wasm32-wasi/include-all.c","start":34367965,"end":34372229},{"filename":"/share/wasm32-wasi/predefined-macros.txt","start":34372229,"end":34483772},{"filename":"/share/wasm32-wasi/undefined-symbols.txt","start":34483772,"end":34486169}],"remote_package_size":34486169})})();var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import("module");var require=createRequire(import.meta.url);var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/"}else{scriptDirectory=require("url").fileURLToPath(new URL("./",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:"utf8",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module["thisProgram"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\/g,"/")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module["inspect"]=()=>"[Emscripten Module object]"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];if(typeof WebAssembly!="object"){abort("no native wasm support detected")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module["HEAP8"]=HEAP8=new Int8Array(b);Module["HEAP16"]=HEAP16=new Int16Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);Module["HEAPU16"]=HEAPU16=new Uint16Array(b);Module["HEAP32"]=HEAP32=new Int32Array(b);Module["HEAPU32"]=HEAPU32=new Uint32Array(b);Module["HEAPF32"]=HEAPF32=new Float32Array(b);Module["HEAPF64"]=HEAPF64=new Float64Array(b);Module["HEAP64"]=HEAP64=new BigInt64Array(b);Module["HEAPU64"]=HEAPU64=new BigUint64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){___funcs_on_exit();callRuntimeCallbacks(__ATEXIT__);FS.quit();TTY.shutdown();runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith("file://");var wasmBinaryFile;if(Module["locateFile"]){wasmBinaryFile="clang.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL("clang.wasm",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:"same-origin"}).then(response=>{if(!response["ok"]){throw"failed to load wasm binary file at '"+binaryFile+"'"}return response["arrayBuffer"]()}).catch(()=>getBinarySync(binaryFile))}else if(readAsync){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),reject)})}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(binaryFile,{credentials:"same-origin"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={"a":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["X"];updateMemoryViews();wasmTable=wasmExports["Z"];addOnInit(wasmExports["Y"]);removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}function ExitStatus(status){this.name="ExitStatus";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module["noExitRuntime"]||false;var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var ___call_sighandler=(fp,sig)=>getWasmTableEntry(fp)(sig);var PATH={isAbs:path=>path.charAt(0)==="/",splitPath:filename=>{var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)};var initRandomFill=()=>{if(typeof crypto=="object"&&typeof crypto["getRandomValues"]=="function"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");var randomFillSync=crypto_module["randomFillSync"];if(randomFillSync){return view=>crypto_module["randomFillSync"](view)}var randomBytes=crypto_module["randomBytes"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort("initRandomDevice")};var randomFill=view=>(randomFill=initRandomFill())(view);var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var FS_stdin_getChar_buffer=[];var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf)}catch(e){if(e.toString().includes("EOF"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}FS_stdin_getChar_buffer=intArrayFromString(result,true)}return FS_stdin_getChar_buffer.shift()};var TTY={ttys:[],init(){},shutdown(){},register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close(stream){stream.tty.ops.fsync(stream.tty)},fsync(stream){stream.tty.ops.fsync(stream.tty)},read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char(tty){return FS_stdin_getChar()},put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}},ioctl_tcgets(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(tty,optional_actions,data){return 0},ioctl_tiocgwinsz(tty){return[24,80]}},default_tty1_ops:{put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var zeroMemory=(address,size)=>{HEAPU8.fill(0,address,address+size);return address};var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var mmapAlloc=size=>{size=alignMemory(size,65536);var ptr=_emscripten_builtin_memalign(65536,size);if(!ptr)return 0;return zeroMemory(ptr,size)};var MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}MEMFS.ops_table||={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir(node){var entries=[".",".."];for(var key of Object.keys(node.contents)){entries.push(key)}return entries},symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=!noRunDep?getUniqueRunDependency(`al ${url}`):"";readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`);onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw`Loading data file "${url}" failed.`}});if(dep)addRunDependency(dep)};var FS_createDataFile=(parent,name,fileData,canRead,canWrite,canOwn)=>{FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn)};var preloadPlugins=Module["preloadPlugins"]||[];var FS_handledByPreloadPlugin=(byteArray,fullname,finish,onerror)=>{if(typeof Browser!="undefined")Browser.init();var handled=false;preloadPlugins.forEach(plugin=>{if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,onerror);handled=true}});return handled};var FS_createPreloadedFile=(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(`cp ${fullname}`);function processData(byteArray){function finish(byteArray){preFinish?.();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}onload?.();removeRunDependency(dep)}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror?.();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}};var FS_modeStringToFlags=str=>{var flagModes={"r":0,"r+":2,"w":512|64|1,"w+":512|64|2,"a":1024|64|1,"a+":1024|64|2};var flags=flagModes[str];if(typeof flags=="undefined"){throw new Error(`Unknown file open mode: ${str}`)}return flags};var FS_getMode=(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(path,opts={}){path=PATH_FS.resolve(path);if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split("/").filter(p=>!!p);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?`${mount}/${path}`:mount+path}path=path?`${node.name}/${path}`:node.name;node=node.parent}},hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode(node){FS.hashRemoveNode(node)},isRoot(node){return node===node.parent},isMountpoint(node){return!!node.mounted},isFile(mode){return(mode&61440)===32768},isDir(mode){return(mode&61440)===16384},isLink(mode){return(mode&61440)===40960},isChrdev(mode){return(mode&61440)===8192},isBlkdev(mode){return(mode&61440)===24576},isFIFO(mode){return(mode&61440)===4096},isSocket(mode){return(mode&49152)===49152},flagsToPermissionString(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes("r")&&!(node.mode&292)){return 2}else if(perms.includes("w")&&!(node.mode&146)){return 2}else if(perms.includes("x")&&!(node.mode&73)){return 2}return 0},mayLookup(dir){var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}return stream},getStream:fd=>FS.streams[fd],createStream(stream,fd=-1){if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);if(fd==-1){fd=FS.nextfd()}stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream(fd){FS.streams[fd]=null},chrdev_stream_ops:{open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;stream.stream_ops.open?.(stream)},llseek(){throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs(populate,callback){if(typeof populate=="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`)}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup(parent,name){return parent.node_ops.lookup(parent,name)},mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev(path,mode,dev){if(typeof dev=="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat(path){return FS.stat(path,true)},chmod(path,mode,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod(path,mode){FS.chmod(path,mode,true)},fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode)},chown(path,uid,gid,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown(path,uid,gid){FS.chown(path,uid,gid,true)},fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid)},truncate(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open(path,flags,mode){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags=="string"?FS_modeStringToFlags(flags):flags;mode=typeof mode=="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path=="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed(stream){return stream.fd===null},llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap(stream,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error(`Invalid encoding type "${opts.encoding}"`)}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:()=>FS.currentPath,chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=()=>{if(randomLeft===0){randomLeft=randomFill(randomBuffer).byteLength}return randomBuffer[--randomLeft]};FS.createDevice("/dev","random",randomByte);FS.createDevice("/dev","urandom",randomByte);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories(){FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount(){var node=FS.createNode(proc_self,"fd",16384|511,73);node.node_ops={lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1)},ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.name="ErrnoError";this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit(){FS.init.initialized=false;_fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath(parent,path,canRead,canWrite){parent=typeof parent=="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent=="string"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}},createDevice(parent,name,input,output){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open(stream){stream.seekable=false},close(stream){if(output?.buffer?.length){output(10)}},read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||"",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]=="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]=="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node}};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;HEAP64[buf+24>>3]=BigInt(stat.size);HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();HEAP64[buf+40>>3]=BigInt(Math.floor(atime/1e3));HEAPU32[buf+48>>2]=atime%1e3*1e3;HEAP64[buf+56>>3]=BigInt(Math.floor(mtime/1e3));HEAPU32[buf+64>>2]=mtime%1e3*1e3;HEAP64[buf+72>>3]=BigInt(Math.floor(ctime/1e3));HEAPU32[buf+80>>2]=ctime%1e3*1e3;HEAP64[buf+88>>3]=BigInt(stat.ino);return 0},doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream}};function ___syscall_chdir(path){try{path=SYSCALLS.getStr(path);FS.chdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_dup3(fd,newfd,flags){try{var old=SYSCALLS.getStreamFromFD(fd);if(old.fd===newfd)return-28;var existing=FS.getStream(newfd);if(existing)FS.close(existing);return FS.createStream(old,newfd).fd}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_faccessat(dirfd,path,amode,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var setErrNo=value=>{HEAP32[___errno_location()>>2]=value;return value};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}while(FS.streams[arg]){arg++}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.getp();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_getdents64(fd,dirp,count){try{var stream=SYSCALLS.getStreamFromFD(fd);stream.getdents||=FS.readdir(stream.path);var struct_size=280;var pos=0;var off=FS.llseek(stream,0,1);var idx=Math.floor(off/struct_size);while(idx<stream.getdents.length&&pos+struct_size<=count){var id;var type;var name=stream.getdents[idx];if(name==="."){id=stream.node.id;type=4}else if(name===".."){var lookup=FS.lookupPath(stream.path,{parent:true});id=lookup.node.id;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}HEAP64[dirp+pos>>3]=BigInt(id);HEAP64[dirp+pos+8>>3]=BigInt((idx+1)*struct_size);HEAP16[dirp+pos+16>>1]=280;HEAP8[dirp+pos+18>>0]=type;stringToUTF8(name,dirp+pos+19,256);pos+=struct_size;idx+=1}FS.llseek(stream,idx*struct_size,0);return pos}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:{if(!stream.tty)return-59;return 0}case 21505:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcgets){var termios=stream.tty.ops.ioctl_tcgets(stream);var argp=SYSCALLS.getp();HEAP32[argp>>2]=termios.c_iflag||0;HEAP32[argp+4>>2]=termios.c_oflag||0;HEAP32[argp+8>>2]=termios.c_cflag||0;HEAP32[argp+12>>2]=termios.c_lflag||0;for(var i=0;i<32;i++){HEAP8[argp+i+17>>0]=termios.c_cc[i]||0}return 0}return 0}case 21510:case 21511:case 21512:{if(!stream.tty)return-59;return 0}case 21506:case 21507:case 21508:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tcsets){var argp=SYSCALLS.getp();var c_iflag=HEAP32[argp>>2];var c_oflag=HEAP32[argp+4>>2];var c_cflag=HEAP32[argp+8>>2];var c_lflag=HEAP32[argp+12>>2];var c_cc=[];for(var i=0;i<32;i++){c_cc.push(HEAP8[argp+i+17>>0])}return stream.tty.ops.ioctl_tcsets(stream.tty,op,{c_iflag:c_iflag,c_oflag:c_oflag,c_cflag:c_cflag,c_lflag:c_lflag,c_cc:c_cc})}return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.getp();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.getp();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;if(stream.tty.ops.ioctl_tiocgwinsz){var winsize=stream.tty.ops.ioctl_tiocgwinsz(stream.tty);var argp=SYSCALLS.getp();HEAP16[argp>>1]=winsize[0];HEAP16[argp+2>>1]=winsize[1]}return 0}case 21524:{if(!stream.tty)return-59;return 0}case 21515:{if(!stream.tty)return-59;return 0}default:return-28}}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_lstat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.lstat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_newfstatat(dirfd,path,buf,flags){try{path=SYSCALLS.getStr(path);var nofollow=flags&256;var allowEmpty=flags&4096;flags=flags&~6400;path=SYSCALLS.calculateAt(dirfd,path,allowEmpty);return SYSCALLS.doStat(nofollow?FS.lstat:FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_readlinkat(dirfd,path,buf,bufsize){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){try{oldpath=SYSCALLS.getStr(oldpath);newpath=SYSCALLS.getStr(newpath);oldpath=SYSCALLS.calculateAt(olddirfd,oldpath);newpath=SYSCALLS.calculateAt(newdirfd,newpath);FS.rename(oldpath,newpath);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_rmdir(path){try{path=SYSCALLS.getStr(path);FS.rmdir(path);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_statfs64(path,size,buf){try{path=SYSCALLS.getStr(path);HEAP32[buf+4>>2]=4096;HEAP32[buf+40>>2]=4096;HEAP32[buf+8>>2]=1e6;HEAP32[buf+12>>2]=5e5;HEAP32[buf+16>>2]=5e5;HEAP32[buf+20>>2]=FS.nextInode;HEAP32[buf+24>>2]=1e6;HEAP32[buf+28>>2]=42;HEAP32[buf+44>>2]=2;HEAP32[buf+36>>2]=255;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_symlink(target,linkpath){try{target=SYSCALLS.getStr(target);linkpath=SYSCALLS.getStr(linkpath);FS.symlink(target,linkpath);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function ___syscall_unlinkat(dirfd,path,flags){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(flags===0){FS.unlink(path)}else if(flags===512){FS.rmdir(path)}else{abort("Invalid flags passed to unlinkat")}return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var nowIsMonotonic=1;var __emscripten_get_now_is_monotonic=()=>nowIsMonotonic;var __emscripten_runtime_keepalive_clear=()=>{noExitRuntime=false;runtimeKeepaliveCounter=0};var __emscripten_throw_longjmp=()=>{throw Infinity};var MAX_INT53=9007199254740992;var MIN_INT53=-9007199254740992;var bigintToI53Checked=num=>num<MIN_INT53||num>MAX_INT53?NaN:Number(num);function __gmtime_js(time,tmPtr){time=bigintToI53Checked(time);var date=new Date(time*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];var ydayFromDate=date=>{var leap=isLeapYear(date.getFullYear());var monthDaysCumulative=leap?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;return yday};function __localtime_js(time,tmPtr){time=bigintToI53Checked(time);var date=new Date(time*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var yday=ydayFromDate(date)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst}function __mmap_js(len,prot,flags,fd,offset,allocated,addr){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);var res=FS.mmap(stream,len,offset,prot,flags);var ptr=res.ptr;HEAP32[allocated>>2]=res.allocated;HEAPU32[addr>>2]=ptr;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}function __munmap_js(addr,len,prot,flags,fd,offset){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);if(prot&2){SYSCALLS.doMsync(addr,stream,len,flags,offset)}FS.munmap(stream)}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return-e.errno}}var timers={};var handleException=e=>{if(e instanceof ExitStatus||e=="unwind"){return EXITSTATUS}quit_(1,e)};var runtimeKeepaliveCounter=0;var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module["onExit"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;if(!keepRuntimeAlive()){exitRuntime()}_proc_exit(status)};var _exit=exitJS;var maybeExit=()=>{if(runtimeExited){return}if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}};var callUserCallback=func=>{if(runtimeExited||ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}};var _emscripten_get_now;_emscripten_get_now=()=>performance.now();var __setitimer_js=(which,timeout_ms)=>{if(timers[which]){clearTimeout(timers[which].id);delete timers[which]}if(!timeout_ms)return 0;var id=setTimeout(()=>{delete timers[which];callUserCallback(()=>__emscripten_timeout(which,_emscripten_get_now()))},timeout_ms);timers[which]={id:id,timeout_ms:timeout_ms};return 0};var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8(str,ret,size);return ret};var __tzset_js=(timezone,daylight,tzname)=>{var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAPU32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=stringToNewUTF8(winterName);var summerNamePtr=stringToNewUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr}};var _abort=()=>{abort("")};var _emscripten_date_now=()=>Date.now();var getHeapMax=()=>2147483648;var _emscripten_get_heap_max=()=>getHeapMax();var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||"./this.program";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}HEAP8[buffer>>0]=0};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var rightsBase=0;var rightsInheriting=0;var flags=0;{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4}HEAP8[pbuf>>0]=type;HEAP16[pbuf+2>>1]=flags;HEAP64[pbuf+8>>3]=BigInt(rightsBase);HEAP64[pbuf+16>>3]=BigInt(rightsInheriting);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_pread(fd,iov,iovcnt,offset,pnum){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt,offset);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}function _fd_seek(fd,offset,whence,newOffset){offset=bigintToI53Checked(offset);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);HEAP64[newOffset>>3]=BigInt(stream.position);if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var _getentropy=(buffer,size)=>{randomFill(HEAPU8.subarray(buffer,buffer+size));return 0};var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var _strftime=(s,maxsize,format,tm)=>{var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value=="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":date=>getWeekBasedYear(date),"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}return"PM"},"%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},"%V":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"};pattern=pattern.replace(/%%/g,"\0\0");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\0\0/g,"%");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1};var _strftime_l=(s,maxsize,format,tm,loc)=>_strftime(s,maxsize,format,tm);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_unlink"]=FS.unlink;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;var wasmImports={F:___call_sighandler,m:___syscall_chdir,W:___syscall_dup3,n:___syscall_faccessat,c:___syscall_fcntl64,U:___syscall_fstat64,P:___syscall_getcwd,E:___syscall_getdents64,t:___syscall_ioctl,R:___syscall_lstat64,N:___syscall_mkdirat,S:___syscall_newfstatat,j:___syscall_openat,D:___syscall_readlinkat,B:___syscall_renameat,C:___syscall_rmdir,T:___syscall_stat64,A:___syscall_statfs64,y:___syscall_symlink,h:___syscall_unlinkat,V:__emscripten_get_now_is_monotonic,G:__emscripten_runtime_keepalive_clear,u:__emscripten_throw_longjmp,L:__gmtime_js,M:__localtime_js,J:__mmap_js,K:__munmap_js,g:__setitimer_js,w:__tzset_js,a:_abort,l:_emscripten_date_now,x:_emscripten_get_heap_max,d:_emscripten_get_now,v:_emscripten_resize_heap,o:_environ_get,p:_environ_sizes_get,b:_exit,e:_fd_close,k:_fd_fdstat_get,I:_fd_pread,i:_fd_read,O:_fd_seek,f:_fd_write,r:_getentropy,H:invoke_ii,z:invoke_vi,q:_proc_exit,Q:_strftime,s:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports["Y"])();var _main=Module["_main"]=(a0,a1)=>(_main=Module["_main"]=wasmExports["_"])(a0,a1);var ___errno_location=()=>(___errno_location=wasmExports["$"])();var _malloc=a0=>(_malloc=wasmExports["aa"])(a0);var ___funcs_on_exit=()=>(___funcs_on_exit=wasmExports["ba"])();var _fflush=Module["_fflush"]=a0=>(_fflush=Module["_fflush"]=wasmExports["ca"])(a0);var _emscripten_builtin_memalign=(a0,a1)=>(_emscripten_builtin_memalign=wasmExports["da"])(a0,a1);var __emscripten_timeout=(a0,a1)=>(__emscripten_timeout=wasmExports["ea"])(a0,a1);var _setThrew=(a0,a1)=>(_setThrew=wasmExports["fa"])(a0,a1);var stackSave=()=>(stackSave=wasmExports["ga"])();var stackRestore=a0=>(stackRestore=wasmExports["ha"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports["ia"])(a0);function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createPath"]=FS.createPath;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createDevice"]=FS.createDevice;Module["callMain"]=callMain;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS"]=FS;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_unlink"]=FS.unlink;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args=[]){var entryFunction=_main;args.unshift(thisProgram);var argc=args.length;var argv=stackAlloc((argc+1)*4);var argv_ptr=argv;args.forEach(arg=>{HEAPU32[argv_ptr>>2]=stringToUTF8OnStack(arg);argv_ptr+=4});HEAPU32[argv_ptr>>2]=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args=arguments_){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(shouldRunNow)callMain(args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=false;if(Module["noInitialRun"])shouldRunNow=false;run();


  return moduleArg.ready
}
);
})();
;
export default Module;